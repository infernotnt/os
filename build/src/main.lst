GAS LISTING /tmp/cc098How.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB3:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include "../h/alloc.h"
   4:src/main.cpp  **** #include "../h/my_console.h"
   5:src/main.cpp  **** 
   6:src/main.cpp  **** extern "C" void trapRoutine();
   7:src/main.cpp  **** int gTimer = 0;
   8:src/main.cpp  **** void userMain();
   9:src/main.cpp  **** 
  10:src/main.cpp  **** void main()
  11:src/main.cpp  **** {
  12              		.loc 1 11 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  12:src/main.cpp  ****     // should be before changing sstatus 0x2 bit
  13:src/main.cpp  ****     __asm__ volatile ("csrw stvec, %[vector]" : : [vector] "r" (&trapRoutine));
  20              		.loc 1 13 5
  21              		.loc 1 13 79 is_stmt 0
  22 000c 97070000 		la	a5,trapRoutine
  22      83B70700 
  23              	#APP
  24              	# 13 "src/main.cpp" 1
  14              	
  15:src/main.cpp  ****     // set MODE to 0
  16:src/main.cpp  ****     __asm__ volatile ("csrc stvec, 0x1");
  25              		csrw stvec, a5
  26              	# 0 "" 2
  27              		.loc 1 16 5 is_stmt 1
  28              		.loc 1 16 41 is_stmt 0
  29              	# 16 "src/main.cpp" 1
  17              	    __asm__ volatile ("csrc stvec, 0x2");
  30              		csrc stvec, 0x1
  31              	# 0 "" 2
  32              		.loc 1 17 5 is_stmt 1
  33              		.loc 1 17 41 is_stmt 0
  34              	# 17 "src/main.cpp" 1
  18              	
  19:src/main.cpp  ****     __asm__ volatile ("csrs sstatus, 0x02"); // sets the "sie" bit to 1 (s interupt enable)
  35              		csrc stvec, 0x2
  36              	# 0 "" 2
  37              		.loc 1 19 5 is_stmt 1
  38              		.loc 1 19 44 is_stmt 0
GAS LISTING /tmp/cc098How.s 			page 2


  39              	# 19 "src/main.cpp" 1
  20              	
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     __asm__ volatile ("li a0, 1");
  40              		csrs sstatus, 0x02
  41              	# 0 "" 2
  42              		.loc 1 22 5 is_stmt 1
  43              		.loc 1 22 34 is_stmt 0
  44              	# 22 "src/main.cpp" 1
  23              	    __asm__ volatile ("li a1, 17");
  45              		li a0, 1
  46              	# 0 "" 2
  47              		.loc 1 23 5 is_stmt 1
  48              		.loc 1 23 35 is_stmt 0
  49              	# 23 "src/main.cpp" 1
  24              	    __asm__ volatile ("ecall");
  50              		li a1, 17
  51              	# 0 "" 2
  52              		.loc 1 24 5 is_stmt 1
  53              		.loc 1 24 31 is_stmt 0
  54              	# 24 "src/main.cpp" 1
  25              	
  26:src/main.cpp  **** //    userMain();
  27:src/main.cpp  **** }
  55              		ecall
  56              	# 0 "" 2
  57              		.loc 1 27 1
  58              	#NO_APP
  59 0030 03348100 		ld	s0,8(sp)
  60              		.cfi_restore 8
  61              		.cfi_def_cfa 2, 16
  62 0034 13010101 		addi	sp,sp,16
  63              		.cfi_def_cfa_offset 0
  64 0038 67800000 		jr	ra
  65              		.cfi_endproc
  66              	.LFE3:
  68              		.section	.rodata.str1.8,"aMS",@progbits,1
  69              		.align	3
  70              	.LC0:
  71 0000 696C6C65 		.string	"illegal instruction"
  71      67616C20 
  71      696E7374 
  71      72756374 
  71      696F6E00 
  72 0014 00000000 		.align	3
  73              	.LC1:
  74 0018 6E6F2070 		.string	"no permission for read to adress"
  74      65726D69 
  74      7373696F 
  74      6E20666F 
  74      72207265 
  75 0039 00000000 		.align	3
  75      000000
  76              	.LC2:
  77 0040 6E6F2070 		.string	"no permission for write to adress"
  77      65726D69 
  77      7373696F 
GAS LISTING /tmp/cc098How.s 			page 3


  77      6E20666F 
  77      72207772 
  78 0062 00000000 		.align	3
  78      0000
  79              	.LC3:
  80 0068 6563616C 		.string	"ecall from user mode"
  80      6C206672 
  80      6F6D2075 
  80      73657220 
  80      6D6F6465 
  81 007d 000000   		.align	3
  82              	.LC4:
  83 0080 6563616C 		.string	"ecall from system mode wtf?"
  83      6C206672 
  83      6F6D2073 
  83      79737465 
  83      6D206D6F 
  84              		.text
  85              		.align	2
  86              		.globl	_Z14debugInterruptii
  88              	_Z14debugInterruptii:
  89              	.LFB5:
  28:src/main.cpp  **** 
  29:src/main.cpp  **** void debugInterrupt(int, int);
  30:src/main.cpp  **** 
  31:src/main.cpp  **** void cTrapRoutine()
  32:src/main.cpp  **** {
  33:src/main.cpp  ****     uint64 scause;
  34:src/main.cpp  ****     __asm__ volatile ("csrr %[name], scause" : [name] "=r"(scause));
  35:src/main.cpp  **** 
  36:src/main.cpp  ****     int isExternal = (scause & (0x1UL << 63)) != 0;
  37:src/main.cpp  ****     int cause = scause & (~(1UL << 63));
  38:src/main.cpp  **** 
  39:src/main.cpp  ****     debugInterrupt(isExternal, cause);
  40:src/main.cpp  **** 
  41:src/main.cpp  ****     if(isExternal == 1)
  42:src/main.cpp  ****     {
  43:src/main.cpp  ****         __asm__ volatile ("csrc sip, 0xA"); // clears the 9th bit in register sip. (the bit signifi
  44:src/main.cpp  **** 
  45:src/main.cpp  ****         if (cause == 1) {
  46:src/main.cpp  ****             if (gTimer % 10 == 0) {
  47:src/main.cpp  ****                 putString("Time: ");
  48:src/main.cpp  ****                 putInt(gTimer / 10);
  49:src/main.cpp  ****                 putString("s");
  50:src/main.cpp  ****                 putNewline();
  51:src/main.cpp  ****             }
  52:src/main.cpp  ****             gTimer++;
  53:src/main.cpp  ****         }
  54:src/main.cpp  ****     }
  55:src/main.cpp  ****     else
  56:src/main.cpp  ****     {
  57:src/main.cpp  ****         __asm__ volatile ("csrc sip, 0x2"); // clears the 1st bit in register sip. (the bit signifi
  58:src/main.cpp  ****         if(cause == 8 || cause == 9)
  59:src/main.cpp  ****         {
  60:src/main.cpp  ****             //dispatchSystemCall();
  61:src/main.cpp  ****             uint64 code, parameter1;
  62:src/main.cpp  ****             __asm__ volatile ("mv %[name], a0" : [name] "=r"(code));
GAS LISTING /tmp/cc098How.s 			page 4


  63:src/main.cpp  ****             __asm__ volatile ("mv %[name], a1" : [name] "=r"(parameter1));
  64:src/main.cpp  **** 
  65:src/main.cpp  **** //            __putc('a');
  66:src/main.cpp  ****             gTimer+= 99;
  67:src/main.cpp  **** 
  68:src/main.cpp  ****             putString("system call. Code=");
  69:src/main.cpp  ****             putU64(code);
  70:src/main.cpp  ****             putString( " parameter1=");
  71:src/main.cpp  ****             putU64(parameter1);
  72:src/main.cpp  ****             putNewline();
  73:src/main.cpp  **** 
  74:src/main.cpp  ****             assert(code != 0);
  75:src/main.cpp  **** 
  76:src/main.cpp  ****             if(code == 1)
  77:src/main.cpp  ****             {
  78:src/main.cpp  **** //                MemAlloc::get()->allocMem(parameter1);
  79:src/main.cpp  ****             }
  80:src/main.cpp  ****             else if (code == 2)
  81:src/main.cpp  ****             {
  82:src/main.cpp  **** //                MemAlloc::get()->freeMem(nullptr);
  83:src/main.cpp  ****                 assert(false);
  84:src/main.cpp  ****             }
  85:src/main.cpp  ****             else
  86:src/main.cpp  ****             {
  87:src/main.cpp  ****                 assert(false); // unknown code
  88:src/main.cpp  ****             }
  89:src/main.cpp  **** 
  90:src/main.cpp  ****         }
  91:src/main.cpp  **** 
  92:src/main.cpp  ****         __asm__ volatile ("csrc sip, 0x2");
  93:src/main.cpp  **** 
  94:src/main.cpp  ****         uint64 a;
  95:src/main.cpp  ****         __asm__ volatile ("csrr %[name], sip" : [name] "=r"(a));
  96:src/main.cpp  ****         putString("EVO:");
  97:src/main.cpp  ****         putU64(a);
  98:src/main.cpp  ****     }
  99:src/main.cpp  **** 
 100:src/main.cpp  ****     console_handler();
 101:src/main.cpp  **** }
 102:src/main.cpp  **** 
 103:src/main.cpp  **** void debugInterrupt(int isExternal, int cause)
 104:src/main.cpp  **** {
  90              		.loc 1 104 1 is_stmt 1
  91              		.cfi_startproc
  92              	.LVL0:
  93 003c 130101FF 		addi	sp,sp,-16
  94              		.cfi_def_cfa_offset 16
  95 0040 23341100 		sd	ra,8(sp)
  96 0044 23308100 		sd	s0,0(sp)
  97              		.cfi_offset 1, -8
  98              		.cfi_offset 8, -16
  99 0048 13040101 		addi	s0,sp,16
 100              		.cfi_def_cfa 8, 0
 105:src/main.cpp  **** //    assert(false);
 106:src/main.cpp  ****     if (isExternal) {
 101              		.loc 1 106 5
 102 004c 63160502 		bnez	a0,.L4
GAS LISTING /tmp/cc098How.s 			page 5


 107:src/main.cpp  ****         if (cause == 1)
 108:src/main.cpp  ****         {
 109:src/main.cpp  **** //            putString("probably timer");
 110:src/main.cpp  ****         } else if (cause == 9)
 111:src/main.cpp  ****         {
 112:src/main.cpp  **** //            putString("external hardware interrupt");
 113:src/main.cpp  ****         }
 114:src/main.cpp  ****     }
 115:src/main.cpp  ****     else
 116:src/main.cpp  ****     {
 117:src/main.cpp  ****         if(cause == 2)
 103              		.loc 1 117 9
 104 0050 93072000 		li	a5,2
 105 0054 638EF502 		beq	a1,a5,.L10
 118:src/main.cpp  ****         {
 119:src/main.cpp  ****             putString("illegal instruction");
 120:src/main.cpp  ****         }
 121:src/main.cpp  ****         else if(cause == 5)
 106              		.loc 1 121 14
 107 0058 93075000 		li	a5,5
 108 005c 6384F504 		beq	a1,a5,.L11
 122:src/main.cpp  ****         {
 123:src/main.cpp  ****             putString("no permission for read to adress");
 124:src/main.cpp  ****         }
 125:src/main.cpp  ****         else if(cause == 7)
 109              		.loc 1 125 14
 110 0060 93077000 		li	a5,7
 111 0064 638AF504 		beq	a1,a5,.L12
 126:src/main.cpp  ****         {
 127:src/main.cpp  ****             putString("no permission for write to adress");
 128:src/main.cpp  ****         }
 129:src/main.cpp  ****         else if(cause == 8)
 112              		.loc 1 129 14
 113 0068 93078000 		li	a5,8
 114 006c 6380F506 		beq	a1,a5,.L13
 130:src/main.cpp  ****         {
 131:src/main.cpp  ****             putString("ecall from user mode");
 132:src/main.cpp  ****         }
 133:src/main.cpp  ****         else if(cause == 9)
 115              		.loc 1 133 14
 116 0070 93079000 		li	a5,9
 117 0074 6386F506 		beq	a1,a5,.L14
 118              	.LVL1:
 119              	.L4:
 134:src/main.cpp  ****         {
 135:src/main.cpp  ****             putString("ecall from system mode wtf?");
 136:src/main.cpp  **** //            assert(false);
 137:src/main.cpp  ****         }
 138:src/main.cpp  ****     }
 139:src/main.cpp  ****     putNewline();
 120              		.loc 1 139 5
 121              		.loc 1 139 15 is_stmt 0
 122 0078 97000000 		call	_Z10putNewlinev@plt
 122      E7800000 
 123              	.LVL2:
 140:src/main.cpp  **** }
 124              		.loc 1 140 1
GAS LISTING /tmp/cc098How.s 			page 6


 125 0080 83308100 		ld	ra,8(sp)
 126              		.cfi_remember_state
 127              		.cfi_restore 1
 128 0084 03340100 		ld	s0,0(sp)
 129              		.cfi_restore 8
 130              		.cfi_def_cfa 2, 16
 131 0088 13010101 		addi	sp,sp,16
 132              		.cfi_def_cfa_offset 0
 133 008c 67800000 		jr	ra
 134              	.LVL3:
 135              	.L10:
 136              		.cfi_restore_state
 119:src/main.cpp  ****         }
 137              		.loc 1 119 13 is_stmt 1
 119:src/main.cpp  ****         }
 138              		.loc 1 119 22 is_stmt 0
 139 0090 17050000 		lla	a0,.LC0
 139      13050500 
 140              	.LVL4:
 141 0098 97000000 		call	_Z9putStringPKc@plt
 141      E7800000 
 142              	.LVL5:
 143 00a0 6FF09FFD 		j	.L4
 144              	.LVL6:
 145              	.L11:
 123:src/main.cpp  ****         }
 146              		.loc 1 123 13 is_stmt 1
 123:src/main.cpp  ****         }
 147              		.loc 1 123 22 is_stmt 0
 148 00a4 17050000 		lla	a0,.LC1
 148      13050500 
 149              	.LVL7:
 150 00ac 97000000 		call	_Z9putStringPKc@plt
 150      E7800000 
 151              	.LVL8:
 152 00b4 6FF05FFC 		j	.L4
 153              	.LVL9:
 154              	.L12:
 127:src/main.cpp  ****         }
 155              		.loc 1 127 13 is_stmt 1
 127:src/main.cpp  ****         }
 156              		.loc 1 127 22 is_stmt 0
 157 00b8 17050000 		lla	a0,.LC2
 157      13050500 
 158              	.LVL10:
 159 00c0 97000000 		call	_Z9putStringPKc@plt
 159      E7800000 
 160              	.LVL11:
 161 00c8 6FF01FFB 		j	.L4
 162              	.LVL12:
 163              	.L13:
 131:src/main.cpp  ****         }
 164              		.loc 1 131 13 is_stmt 1
 131:src/main.cpp  ****         }
 165              		.loc 1 131 22 is_stmt 0
 166 00cc 17050000 		lla	a0,.LC3
 166      13050500 
GAS LISTING /tmp/cc098How.s 			page 7


 167              	.LVL13:
 168 00d4 97000000 		call	_Z9putStringPKc@plt
 168      E7800000 
 169              	.LVL14:
 170 00dc 6FF0DFF9 		j	.L4
 171              	.LVL15:
 172              	.L14:
 135:src/main.cpp  **** //            assert(false);
 173              		.loc 1 135 13 is_stmt 1
 135:src/main.cpp  **** //            assert(false);
 174              		.loc 1 135 22 is_stmt 0
 175 00e0 17050000 		lla	a0,.LC4
 175      13050500 
 176              	.LVL16:
 177 00e8 97000000 		call	_Z9putStringPKc@plt
 177      E7800000 
 178              	.LVL17:
 179 00f0 6FF09FF8 		j	.L4
 180              		.cfi_endproc
 181              	.LFE5:
 183              		.section	.rodata.str1.8
 184 009c 00000000 		.align	3
 185              	.LC5:
 186 00a0 54696D65 		.string	"Time: "
 186      3A2000
 187 00a7 00       		.align	3
 188              	.LC6:
 189 00a8 7300     		.string	"s"
 190 00aa 00000000 		.align	3
 190      0000
 191              	.LC7:
 192 00b0 73797374 		.string	"system call. Code="
 192      656D2063 
 192      616C6C2E 
 192      20436F64 
 192      653D00
 193 00c3 00000000 		.align	3
 193      00
 194              	.LC8:
 195 00c8 20706172 		.string	" parameter1="
 195      616D6574 
 195      6572313D 
 195      00
 196 00d5 000000   		.align	3
 197              	.LC9:
 198 00d8 7372632F 		.string	"src/main.cpp"
 198      6D61696E 
 198      2E637070 
 198      00
 199 00e5 000000   		.align	3
 200              	.LC10:
 201 00e8 45564F3A 		.string	"EVO:"
 201      00
 202              		.text
 203              		.align	2
 204              		.globl	_Z12cTrapRoutinev
 206              	_Z12cTrapRoutinev:
GAS LISTING /tmp/cc098How.s 			page 8


 207              	.LFB4:
  32:src/main.cpp  ****     uint64 scause;
 208              		.loc 1 32 1 is_stmt 1
 209              		.cfi_startproc
 210 00f4 130101FE 		addi	sp,sp,-32
 211              		.cfi_def_cfa_offset 32
 212 00f8 233C1100 		sd	ra,24(sp)
 213 00fc 23388100 		sd	s0,16(sp)
 214 0100 23349100 		sd	s1,8(sp)
 215 0104 23302101 		sd	s2,0(sp)
 216              		.cfi_offset 1, -8
 217              		.cfi_offset 8, -16
 218              		.cfi_offset 9, -24
 219              		.cfi_offset 18, -32
 220 0108 13040102 		addi	s0,sp,32
 221              		.cfi_def_cfa 8, 0
  33:src/main.cpp  ****     __asm__ volatile ("csrr %[name], scause" : [name] "=r"(scause));
 222              		.loc 1 33 5
  34:src/main.cpp  **** 
 223              		.loc 1 34 5
  34:src/main.cpp  **** 
 224              		.loc 1 34 68 is_stmt 0
 225              	#APP
 226              	# 34 "src/main.cpp" 1
 227              		csrr s1, scause
 228              	# 0 "" 2
 229              	.LVL18:
  36:src/main.cpp  ****     int cause = scause & (~(1UL << 63));
 230              		.loc 1 36 5 is_stmt 1
  37:src/main.cpp  **** 
 231              		.loc 1 37 5
  37:src/main.cpp  **** 
 232              		.loc 1 37 9 is_stmt 0
 233              	#NO_APP
 234 0110 1B890400 		sext.w	s2,s1
 235              	.LVL19:
  39:src/main.cpp  **** 
 236              		.loc 1 39 5 is_stmt 1
  39:src/main.cpp  **** 
 237              		.loc 1 39 19 is_stmt 0
 238 0114 93050900 		mv	a1,s2
 239 0118 13A50400 		slti	a0,s1,0
 240 011c 97000000 		call	_Z14debugInterruptii
 240      E7800000 
 241              	.LVL20:
  41:src/main.cpp  ****     {
 242              		.loc 1 41 5 is_stmt 1
 243              	.LBB2:
 244 0124 63CC0404 		bltz	s1,.L22
 245              	.LBB3:
  57:src/main.cpp  ****         if(cause == 8 || cause == 9)
 246              		.loc 1 57 9
  57:src/main.cpp  ****         if(cause == 8 || cause == 9)
 247              		.loc 1 57 43 is_stmt 0
 248              	#APP
 249              	# 57 "src/main.cpp" 1
  58:src/main.cpp  ****         {
GAS LISTING /tmp/cc098How.s 			page 9


 250              		csrc sip, 0x2
 251              	# 0 "" 2
 252              		.loc 1 58 9 is_stmt 1
 253              	#NO_APP
 254              	.LBB4:
  58:src/main.cpp  ****         {
 255              		.loc 1 58 23 is_stmt 0
 256 012c 9B8484FF 		addiw	s1,s1,-8
 257              	.LVL21:
  58:src/main.cpp  ****         {
 258              		.loc 1 58 9
 259 0130 93071000 		li	a5,1
 260 0134 63F2970C 		bleu	s1,a5,.L23
 261              	.LVL22:
 262              	.L19:
 263              	.LBE4:
  92:src/main.cpp  **** 
 264              		.loc 1 92 9 is_stmt 1
  92:src/main.cpp  **** 
 265              		.loc 1 92 43 is_stmt 0
 266              	#APP
 267              	# 92 "src/main.cpp" 1
  94:src/main.cpp  ****         __asm__ volatile ("csrr %[name], sip" : [name] "=r"(a));
 268              		csrc sip, 0x2
 269              	# 0 "" 2
 270              		.loc 1 94 9 is_stmt 1
  95:src/main.cpp  ****         putString("EVO:");
 271              		.loc 1 95 9
  95:src/main.cpp  ****         putString("EVO:");
 272              		.loc 1 95 64 is_stmt 0
 273              	# 95 "src/main.cpp" 1
 274              		csrr s1, sip
 275              	# 0 "" 2
 276              	.LVL23:
  96:src/main.cpp  ****         putU64(a);
 277              		.loc 1 96 9 is_stmt 1
  96:src/main.cpp  ****         putU64(a);
 278              		.loc 1 96 18 is_stmt 0
 279              	#NO_APP
 280 0140 17050000 		lla	a0,.LC10
 280      13050500 
 281 0148 97000000 		call	_Z9putStringPKc@plt
 281      E7800000 
 282              	.LVL24:
  97:src/main.cpp  ****     }
 283              		.loc 1 97 9 is_stmt 1
  97:src/main.cpp  ****     }
 284              		.loc 1 97 15 is_stmt 0
 285 0150 13850400 		mv	a0,s1
 286 0154 97000000 		call	_Z6putU64m@plt
 286      E7800000 
 287              	.LVL25:
 288              	.L17:
 289              	.LBE3:
 290              	.LBE2:
 100:src/main.cpp  **** }
 291              		.loc 1 100 5 is_stmt 1
GAS LISTING /tmp/cc098How.s 			page 10


 100:src/main.cpp  **** }
 292              		.loc 1 100 20 is_stmt 0
 293 015c 97000000 		call	console_handler@plt
 293      E7800000 
 294              	.LVL26:
 101:src/main.cpp  **** 
 295              		.loc 1 101 1
 296 0164 83308101 		ld	ra,24(sp)
 297              		.cfi_remember_state
 298              		.cfi_restore 1
 299 0168 03340101 		ld	s0,16(sp)
 300              		.cfi_restore 8
 301              		.cfi_def_cfa 2, 32
 302 016c 83348100 		ld	s1,8(sp)
 303              		.cfi_restore 9
 304 0170 03390100 		ld	s2,0(sp)
 305              		.cfi_restore 18
 306 0174 13010102 		addi	sp,sp,32
 307              		.cfi_def_cfa_offset 0
 308 0178 67800000 		jr	ra
 309              	.LVL27:
 310              	.L22:
 311              		.cfi_restore_state
 312              	.LBB8:
  43:src/main.cpp  **** 
 313              		.loc 1 43 9 is_stmt 1
  43:src/main.cpp  **** 
 314              		.loc 1 43 43 is_stmt 0
 315              	#APP
 316              	# 43 "src/main.cpp" 1
  45:src/main.cpp  ****             if (gTimer % 10 == 0) {
 317              		csrc sip, 0xA
 318              	# 0 "" 2
 319              		.loc 1 45 9 is_stmt 1
 320              	#NO_APP
 321 0180 93071000 		li	a5,1
 322 0184 E31CF9FC 		bne	s2,a5,.L17
  46:src/main.cpp  ****                 putString("Time: ");
 323              		.loc 1 46 13
  46:src/main.cpp  ****                 putString("Time: ");
 324              		.loc 1 46 24 is_stmt 0
 325 0188 97070000 		lw	a5,.LANCHOR0
 325      83A70700 
 326 0190 1307A000 		li	a4,10
 327 0194 BBE7E702 		remw	a5,a5,a4
  46:src/main.cpp  ****                 putString("Time: ");
 328              		.loc 1 46 13
 329 0198 638E0700 		beqz	a5,.L24
 330              	.L18:
  52:src/main.cpp  ****         }
 331              		.loc 1 52 13 is_stmt 1
  52:src/main.cpp  ****         }
 332              		.loc 1 52 19 is_stmt 0
 333 019c 17070000 		lla	a4,.LANCHOR0
 333      13070700 
 334 01a4 83270700 		lw	a5,0(a4)
 335 01a8 9B871700 		addiw	a5,a5,1
GAS LISTING /tmp/cc098How.s 			page 11


 336 01ac 2320F700 		sw	a5,0(a4)
 337 01b0 6FF0DFFA 		j	.L17
 338              	.L24:
  47:src/main.cpp  ****                 putInt(gTimer / 10);
 339              		.loc 1 47 17 is_stmt 1
  47:src/main.cpp  ****                 putInt(gTimer / 10);
 340              		.loc 1 47 26 is_stmt 0
 341 01b4 17050000 		lla	a0,.LC5
 341      13050500 
 342 01bc 97000000 		call	_Z9putStringPKc@plt
 342      E7800000 
 343              	.LVL28:
  48:src/main.cpp  ****                 putString("s");
 344              		.loc 1 48 17 is_stmt 1
  48:src/main.cpp  ****                 putString("s");
 345              		.loc 1 48 23 is_stmt 0
 346 01c4 17050000 		lw	a0,.LANCHOR0
 346      03250500 
 347 01cc 9307A000 		li	a5,10
 348 01d0 3B45F502 		divw	a0,a0,a5
 349 01d4 97000000 		call	_Z6putInti@plt
 349      E7800000 
 350              	.LVL29:
  49:src/main.cpp  ****                 putNewline();
 351              		.loc 1 49 17 is_stmt 1
  49:src/main.cpp  ****                 putNewline();
 352              		.loc 1 49 26 is_stmt 0
 353 01dc 17050000 		lla	a0,.LC6
 353      13050500 
 354 01e4 97000000 		call	_Z9putStringPKc@plt
 354      E7800000 
 355              	.LVL30:
  50:src/main.cpp  ****             }
 356              		.loc 1 50 17 is_stmt 1
  50:src/main.cpp  ****             }
 357              		.loc 1 50 27 is_stmt 0
 358 01ec 97000000 		call	_Z10putNewlinev@plt
 358      E7800000 
 359              	.LVL31:
 360 01f4 6FF09FFA 		j	.L18
 361              	.LVL32:
 362              	.L23:
 363              	.LBB7:
 364              	.LBB6:
 365              	.LBB5:
  61:src/main.cpp  ****             __asm__ volatile ("mv %[name], a0" : [name] "=r"(code));
 366              		.loc 1 61 13 is_stmt 1
  62:src/main.cpp  ****             __asm__ volatile ("mv %[name], a1" : [name] "=r"(parameter1));
 367              		.loc 1 62 13
  62:src/main.cpp  ****             __asm__ volatile ("mv %[name], a1" : [name] "=r"(parameter1));
 368              		.loc 1 62 68 is_stmt 0
 369              	#APP
 370              	# 62 "src/main.cpp" 1
 371              		mv s1, a0
 372              	# 0 "" 2
 373              	.LVL33:
  63:src/main.cpp  **** 
GAS LISTING /tmp/cc098How.s 			page 12


 374              		.loc 1 63 13 is_stmt 1
  63:src/main.cpp  **** 
 375              		.loc 1 63 74 is_stmt 0
 376              	# 63 "src/main.cpp" 1
 377              		mv s2, a1
 378              	# 0 "" 2
 379              	.LVL34:
  66:src/main.cpp  **** 
 380              		.loc 1 66 13 is_stmt 1
  66:src/main.cpp  **** 
 381              		.loc 1 66 19 is_stmt 0
 382              	#NO_APP
 383 0200 17070000 		lla	a4,.LANCHOR0
 383      13070700 
 384 0208 83270700 		lw	a5,0(a4)
 385 020c 9B873706 		addiw	a5,a5,99
 386 0210 2320F700 		sw	a5,0(a4)
  68:src/main.cpp  ****             putU64(code);
 387              		.loc 1 68 13 is_stmt 1
  68:src/main.cpp  ****             putU64(code);
 388              		.loc 1 68 22 is_stmt 0
 389 0214 17050000 		lla	a0,.LC7
 389      13050500 
 390 021c 97000000 		call	_Z9putStringPKc@plt
 390      E7800000 
 391              	.LVL35:
  69:src/main.cpp  ****             putString( " parameter1=");
 392              		.loc 1 69 13 is_stmt 1
  69:src/main.cpp  ****             putString( " parameter1=");
 393              		.loc 1 69 19 is_stmt 0
 394 0224 13850400 		mv	a0,s1
 395 0228 97000000 		call	_Z6putU64m@plt
 395      E7800000 
 396              	.LVL36:
  70:src/main.cpp  ****             putU64(parameter1);
 397              		.loc 1 70 13 is_stmt 1
  70:src/main.cpp  ****             putU64(parameter1);
 398              		.loc 1 70 22 is_stmt 0
 399 0230 17050000 		lla	a0,.LC8
 399      13050500 
 400 0238 97000000 		call	_Z9putStringPKc@plt
 400      E7800000 
 401              	.LVL37:
  71:src/main.cpp  ****             putNewline();
 402              		.loc 1 71 13 is_stmt 1
  71:src/main.cpp  ****             putNewline();
 403              		.loc 1 71 19 is_stmt 0
 404 0240 13050900 		mv	a0,s2
 405 0244 97000000 		call	_Z6putU64m@plt
 405      E7800000 
 406              	.LVL38:
  72:src/main.cpp  **** 
 407              		.loc 1 72 13 is_stmt 1
  72:src/main.cpp  **** 
 408              		.loc 1 72 23 is_stmt 0
 409 024c 97000000 		call	_Z10putNewlinev@plt
 409      E7800000 
GAS LISTING /tmp/cc098How.s 			page 13


 410              	.LVL39:
  74:src/main.cpp  **** 
 411              		.loc 1 74 13 is_stmt 1
 412 0254 1306A004 		li	a2,74
 413 0258 97050000 		lla	a1,.LC9
 413      93850500 
 414 0260 33359000 		snez	a0,s1
 415 0264 97000000 		call	_Z7_assertbPKci@plt
 415      E7800000 
 416              	.LVL40:
  76:src/main.cpp  ****             {
 417              		.loc 1 76 13
 418 026c 93071000 		li	a5,1
 419 0270 E384F4EC 		beq	s1,a5,.L19
  80:src/main.cpp  ****             {
 420              		.loc 1 80 18
 421 0274 93072000 		li	a5,2
 422 0278 6380F402 		beq	s1,a5,.L25
  87:src/main.cpp  ****             }
 423              		.loc 1 87 17
 424 027c 13067005 		li	a2,87
 425 0280 97050000 		lla	a1,.LC9
 425      93850500 
 426 0288 13050000 		li	a0,0
 427 028c 97000000 		call	_Z7_assertbPKci@plt
 427      E7800000 
 428              	.LVL41:
 429 0294 6FF05FEA 		j	.L19
 430              	.L25:
  83:src/main.cpp  ****             }
 431              		.loc 1 83 17
 432 0298 13063005 		li	a2,83
 433 029c 97050000 		lla	a1,.LC9
 433      93850500 
 434 02a4 13050000 		li	a0,0
 435 02a8 97000000 		call	_Z7_assertbPKci@plt
 435      E7800000 
 436              	.LVL42:
 437 02b0 6FF09FE8 		j	.L19
 438              	.LBE5:
 439              	.LBE6:
 440              	.LBE7:
 441              	.LBE8:
 442              		.cfi_endproc
 443              	.LFE4:
 445              		.globl	gTimer
 446              		.bss
 447              		.align	2
 448              		.set	.LANCHOR0,. + 0
 451              	gTimer:
 452 0000 00000000 		.zero	4
 453              		.text
 454              	.Letext0:
 455              		.file 2 "src/../h/../lib/hw.h"
 456              		.file 3 "src/../h/my_console.h"
 457              		.file 4 "src/../lib/console.h"
GAS LISTING /tmp/cc098How.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc098How.s:9      .text:0000000000000000 main
     /tmp/cc098How.s:13     .text:0000000000000000 .L0 
     /tmp/cc098How.s:14     .text:0000000000000000 .L0 
     /tmp/cc098How.s:15     .text:0000000000000004 .L0 
     /tmp/cc098How.s:17     .text:0000000000000008 .L0 
     /tmp/cc098How.s:19     .text:000000000000000c .L0 
     /tmp/cc098How.s:21     .text:000000000000000c .L0 
     /tmp/cc098How.s:22     .text:000000000000000c .L0 
     /tmp/cc098How.s:28     .text:0000000000000018 .L0 
        src/main.cpp:16     .text:0000000000000018 .L0 
     /tmp/cc098How.s:33     .text:000000000000001c .L0 
        src/main.cpp:17     .text:000000000000001c .L0 
     /tmp/cc098How.s:38     .text:0000000000000020 .L0 
        src/main.cpp:19     .text:0000000000000020 .L0 
     /tmp/cc098How.s:43     .text:0000000000000024 .L0 
        src/main.cpp:22     .text:0000000000000024 .L0 
     /tmp/cc098How.s:48     .text:0000000000000028 .L0 
        src/main.cpp:23     .text:0000000000000028 .L0 
     /tmp/cc098How.s:53     .text:000000000000002c .L0 
        src/main.cpp:24     .text:000000000000002c .L0 
     /tmp/cc098How.s:59     .text:0000000000000030 .L0 
     /tmp/cc098How.s:60     .text:0000000000000034 .L0 
     /tmp/cc098How.s:61     .text:0000000000000034 .L0 
     /tmp/cc098How.s:63     .text:0000000000000038 .L0 
     /tmp/cc098How.s:65     .text:000000000000003c .L0 
     /tmp/cc098How.s:88     .text:000000000000003c _Z14debugInterruptii
     /tmp/cc098How.s:91     .text:000000000000003c .L0 
     /tmp/cc098How.s:93     .text:000000000000003c .L0 
     /tmp/cc098How.s:94     .text:0000000000000040 .L0 
     /tmp/cc098How.s:97     .text:0000000000000048 .L0 
     /tmp/cc098How.s:98     .text:0000000000000048 .L0 
     /tmp/cc098How.s:100    .text:000000000000004c .L0 
     /tmp/cc098How.s:102    .text:000000000000004c .L0 
     /tmp/cc098How.s:104    .text:0000000000000050 .L0 
     /tmp/cc098How.s:107    .text:0000000000000058 .L0 
     /tmp/cc098How.s:110    .text:0000000000000060 .L0 
     /tmp/cc098How.s:113    .text:0000000000000068 .L0 
     /tmp/cc098How.s:116    .text:0000000000000070 .L0 
     /tmp/cc098How.s:121    .text:0000000000000078 .L0 
     /tmp/cc098How.s:122    .text:0000000000000078 .L0 
     /tmp/cc098How.s:125    .text:0000000000000080 .L0 
     /tmp/cc098How.s:126    .text:0000000000000084 .L0 
     /tmp/cc098How.s:127    .text:0000000000000084 .L0 
     /tmp/cc098How.s:129    .text:0000000000000088 .L0 
     /tmp/cc098How.s:130    .text:0000000000000088 .L0 
     /tmp/cc098How.s:132    .text:000000000000008c .L0 
     /tmp/cc098How.s:136    .text:0000000000000090 .L0 
     /tmp/cc098How.s:138    .text:0000000000000090 .L0 
     /tmp/cc098How.s:139    .text:0000000000000090 .L0 
     /tmp/cc098How.s:147    .text:00000000000000a4 .L0 
     /tmp/cc098How.s:148    .text:00000000000000a4 .L0 
     /tmp/cc098How.s:156    .text:00000000000000b8 .L0 
     /tmp/cc098How.s:157    .text:00000000000000b8 .L0 
     /tmp/cc098How.s:165    .text:00000000000000cc .L0 
     /tmp/cc098How.s:166    .text:00000000000000cc .L0 
GAS LISTING /tmp/cc098How.s 			page 15


     /tmp/cc098How.s:174    .text:00000000000000e0 .L0 
     /tmp/cc098How.s:175    .text:00000000000000e0 .L0 
     /tmp/cc098How.s:180    .text:00000000000000f4 .L0 
     /tmp/cc098How.s:206    .text:00000000000000f4 _Z12cTrapRoutinev
     /tmp/cc098How.s:209    .text:00000000000000f4 .L0 
     /tmp/cc098How.s:210    .text:00000000000000f4 .L0 
     /tmp/cc098How.s:211    .text:00000000000000f8 .L0 
     /tmp/cc098How.s:216    .text:0000000000000108 .L0 
     /tmp/cc098How.s:217    .text:0000000000000108 .L0 
     /tmp/cc098How.s:218    .text:0000000000000108 .L0 
     /tmp/cc098How.s:219    .text:0000000000000108 .L0 
     /tmp/cc098How.s:221    .text:000000000000010c .L0 
     /tmp/cc098How.s:223    .text:000000000000010c .L0 
     /tmp/cc098How.s:224    .text:000000000000010c .L0 
        src/main.cpp:34     .text:000000000000010c .L0 
     /tmp/cc098How.s:231    .text:0000000000000110 .L0 
     /tmp/cc098How.s:232    .text:0000000000000110 .L0 
     /tmp/cc098How.s:234    .text:0000000000000110 .L0 
     /tmp/cc098How.s:237    .text:0000000000000114 .L0 
     /tmp/cc098How.s:238    .text:0000000000000114 .L0 
     /tmp/cc098How.s:244    .text:0000000000000124 .L0 
     /tmp/cc098How.s:247    .text:0000000000000128 .L0 
        src/main.cpp:57     .text:0000000000000128 .L0 
     /tmp/cc098How.s:255    .text:000000000000012c .L0 
     /tmp/cc098How.s:256    .text:000000000000012c .L0 
     /tmp/cc098How.s:259    .text:0000000000000130 .L0 
     /tmp/cc098How.s:265    .text:0000000000000138 .L0 
        src/main.cpp:92     .text:0000000000000138 .L0 
     /tmp/cc098How.s:271    .text:000000000000013c .L0 
     /tmp/cc098How.s:272    .text:000000000000013c .L0 
        src/main.cpp:95     .text:000000000000013c .L0 
     /tmp/cc098How.s:278    .text:0000000000000140 .L0 
     /tmp/cc098How.s:280    .text:0000000000000140 .L0 
     /tmp/cc098How.s:284    .text:0000000000000150 .L0 
     /tmp/cc098How.s:285    .text:0000000000000150 .L0 
     /tmp/cc098How.s:292    .text:000000000000015c .L0 
     /tmp/cc098How.s:293    .text:000000000000015c .L0 
     /tmp/cc098How.s:296    .text:0000000000000164 .L0 
     /tmp/cc098How.s:297    .text:0000000000000168 .L0 
     /tmp/cc098How.s:298    .text:0000000000000168 .L0 
     /tmp/cc098How.s:300    .text:000000000000016c .L0 
     /tmp/cc098How.s:301    .text:000000000000016c .L0 
     /tmp/cc098How.s:303    .text:0000000000000170 .L0 
     /tmp/cc098How.s:305    .text:0000000000000174 .L0 
     /tmp/cc098How.s:307    .text:0000000000000178 .L0 
     /tmp/cc098How.s:311    .text:000000000000017c .L0 
     /tmp/cc098How.s:314    .text:000000000000017c .L0 
        src/main.cpp:43     .text:000000000000017c .L0 
     /tmp/cc098How.s:321    .text:0000000000000180 .L0 
     /tmp/cc098How.s:324    .text:0000000000000188 .L0 
     /tmp/cc098How.s:325    .text:0000000000000188 .L0 
     /tmp/cc098How.s:329    .text:0000000000000198 .L0 
     /tmp/cc098How.s:332    .text:000000000000019c .L0 
     /tmp/cc098How.s:333    .text:000000000000019c .L0 
     /tmp/cc098How.s:340    .text:00000000000001b4 .L0 
     /tmp/cc098How.s:341    .text:00000000000001b4 .L0 
     /tmp/cc098How.s:345    .text:00000000000001c4 .L0 
GAS LISTING /tmp/cc098How.s 			page 16


     /tmp/cc098How.s:346    .text:00000000000001c4 .L0 
     /tmp/cc098How.s:352    .text:00000000000001dc .L0 
     /tmp/cc098How.s:353    .text:00000000000001dc .L0 
     /tmp/cc098How.s:357    .text:00000000000001ec .L0 
     /tmp/cc098How.s:358    .text:00000000000001ec .L0 
     /tmp/cc098How.s:367    .text:00000000000001f8 .L0 
     /tmp/cc098How.s:368    .text:00000000000001f8 .L0 
        src/main.cpp:62     .text:00000000000001f8 .L0 
     /tmp/cc098How.s:375    .text:00000000000001fc .L0 
        src/main.cpp:63     .text:00000000000001fc .L0 
     /tmp/cc098How.s:381    .text:0000000000000200 .L0 
     /tmp/cc098How.s:383    .text:0000000000000200 .L0 
     /tmp/cc098How.s:388    .text:0000000000000214 .L0 
     /tmp/cc098How.s:389    .text:0000000000000214 .L0 
     /tmp/cc098How.s:393    .text:0000000000000224 .L0 
     /tmp/cc098How.s:394    .text:0000000000000224 .L0 
     /tmp/cc098How.s:398    .text:0000000000000230 .L0 
     /tmp/cc098How.s:399    .text:0000000000000230 .L0 
     /tmp/cc098How.s:403    .text:0000000000000240 .L0 
     /tmp/cc098How.s:404    .text:0000000000000240 .L0 
     /tmp/cc098How.s:408    .text:000000000000024c .L0 
     /tmp/cc098How.s:409    .text:000000000000024c .L0 
     /tmp/cc098How.s:412    .text:0000000000000254 .L0 
     /tmp/cc098How.s:418    .text:000000000000026c .L0 
     /tmp/cc098How.s:421    .text:0000000000000274 .L0 
     /tmp/cc098How.s:424    .text:000000000000027c .L0 
     /tmp/cc098How.s:432    .text:0000000000000298 .L0 
     /tmp/cc098How.s:442    .text:00000000000002b4 .L0 
     /tmp/cc098How.s:451    .bss:0000000000000000 gTimer
     /tmp/cc098How.s:448    .bss:0000000000000000 .LANCHOR0
     /tmp/cc098How.s:458    .text:00000000000002b4 .L0 
     /tmp/cc098How.s:22     .text:000000000000000c .L0 
     /tmp/cc098How.s:70     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc098How.s:139    .text:0000000000000090 .L0 
     /tmp/cc098How.s:73     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cc098How.s:148    .text:00000000000000a4 .L0 
     /tmp/cc098How.s:76     .rodata.str1.8:0000000000000040 .LC2
     /tmp/cc098How.s:157    .text:00000000000000b8 .L0 
     /tmp/cc098How.s:79     .rodata.str1.8:0000000000000068 .LC3
     /tmp/cc098How.s:166    .text:00000000000000cc .L0 
     /tmp/cc098How.s:82     .rodata.str1.8:0000000000000080 .LC4
     /tmp/cc098How.s:175    .text:00000000000000e0 .L0 
     /tmp/cc098How.s:200    .rodata.str1.8:00000000000000e8 .LC10
     /tmp/cc098How.s:280    .text:0000000000000140 .L0 
     /tmp/cc098How.s:325    .text:0000000000000188 .L0 
     /tmp/cc098How.s:333    .text:000000000000019c .L0 
     /tmp/cc098How.s:185    .rodata.str1.8:00000000000000a0 .LC5
     /tmp/cc098How.s:341    .text:00000000000001b4 .L0 
     /tmp/cc098How.s:346    .text:00000000000001c4 .L0 
     /tmp/cc098How.s:188    .rodata.str1.8:00000000000000a8 .LC6
     /tmp/cc098How.s:353    .text:00000000000001dc .L0 
     /tmp/cc098How.s:383    .text:0000000000000200 .L0 
     /tmp/cc098How.s:191    .rodata.str1.8:00000000000000b0 .LC7
     /tmp/cc098How.s:389    .text:0000000000000214 .L0 
     /tmp/cc098How.s:194    .rodata.str1.8:00000000000000c8 .LC8
     /tmp/cc098How.s:399    .text:0000000000000230 .L0 
     /tmp/cc098How.s:197    .rodata.str1.8:00000000000000d8 .LC9
GAS LISTING /tmp/cc098How.s 			page 17


     /tmp/cc098How.s:413    .text:0000000000000258 .L0 
     /tmp/cc098How.s:425    .text:0000000000000280 .L0 
     /tmp/cc098How.s:433    .text:000000000000029c .L0 
     /tmp/cc098How.s:119    .text:0000000000000078 .L4
     /tmp/cc098How.s:135    .text:0000000000000090 .L10
     /tmp/cc098How.s:145    .text:00000000000000a4 .L11
     /tmp/cc098How.s:154    .text:00000000000000b8 .L12
     /tmp/cc098How.s:163    .text:00000000000000cc .L13
     /tmp/cc098How.s:172    .text:00000000000000e0 .L14
     /tmp/cc098How.s:310    .text:000000000000017c .L22
     /tmp/cc098How.s:362    .text:00000000000001f8 .L23
     /tmp/cc098How.s:288    .text:000000000000015c .L17
     /tmp/cc098How.s:338    .text:00000000000001b4 .L24
     /tmp/cc098How.s:330    .text:000000000000019c .L18
     /tmp/cc098How.s:262    .text:0000000000000138 .L19
     /tmp/cc098How.s:430    .text:0000000000000298 .L25
     /tmp/cc098How.s:978    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc098How.s:1577   .debug_str:000000000000011c .LASF39
     /tmp/cc098How.s:1589   .debug_str:0000000000000216 .LASF40
     /tmp/cc098How.s:1541   .debug_str:0000000000000021 .LASF41
     /tmp/cc098How.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc098How.s:454    .text:00000000000002b4 .Letext0
     /tmp/cc098How.s:1533   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc098How.s:1591   .debug_str:0000000000000223 .LASF0
     /tmp/cc098How.s:1567   .debug_str:00000000000000d9 .LASF1
     /tmp/cc098How.s:1561   .debug_str:00000000000000ae .LASF2
     /tmp/cc098How.s:1545   .debug_str:0000000000000043 .LASF4
     /tmp/cc098How.s:1565   .debug_str:00000000000000c7 .LASF3
     /tmp/cc098How.s:1537   .debug_str:0000000000000013 .LASF5
     /tmp/cc098How.s:1535   .debug_str:0000000000000000 .LASF6
     /tmp/cc098How.s:1555   .debug_str:0000000000000081 .LASF7
     /tmp/cc098How.s:1599   .debug_str:0000000000000255 .LASF8
     /tmp/cc098How.s:1543   .debug_str:0000000000000035 .LASF9
     /tmp/cc098How.s:1619   .debug_str:00000000000002db .LASF10
     /tmp/cc098How.s:1557   .debug_str:0000000000000094 .LASF11
     /tmp/cc098How.s:1615   .debug_str:00000000000002c4 .LASF12
     /tmp/cc098How.s:1609   .debug_str:00000000000002a1 .LASF13
     /tmp/cc098How.s:1569   .debug_str:00000000000000ec .LASF14
     /tmp/cc098How.s:1549   .debug_str:000000000000005a .LASF15
     /tmp/cc098How.s:1603   .debug_str:000000000000026b .LASF16
     /tmp/cc098How.s:1597   .debug_str:0000000000000250 .LASF17
     /tmp/cc098How.s:1571   .debug_str:00000000000000f8 .LASF18
     /tmp/cc098How.s:1587   .debug_str:0000000000000207 .LASF21
     /tmp/cc098How.s:1593   .debug_str:0000000000000230 .LASF23
     /tmp/cc098How.s:89     .text:000000000000003c .LFB5
     /tmp/cc098How.s:181    .text:00000000000000f4 .LFE5
     /tmp/cc098How.s:1595   .debug_str:0000000000000245 .LASF19
     /tmp/cc098How.s:1326   .debug_loc:0000000000000000 .LLST0
     /tmp/cc098How.s:1601   .debug_str:0000000000000265 .LASF20
     /tmp/cc098How.s:1395   .debug_loc:0000000000000106 .LLST1
     /tmp/cc098How.s:123    .text:0000000000000080 .LVL2
     /tmp/cc098How.s:142    .text:00000000000000a0 .LVL5
     /tmp/cc098How.s:151    .text:00000000000000b4 .LVL8
     /tmp/cc098How.s:160    .text:00000000000000c8 .LVL11
     /tmp/cc098How.s:169    .text:00000000000000dc .LVL14
     /tmp/cc098How.s:178    .text:00000000000000f0 .LVL17
     /tmp/cc098How.s:1573   .debug_str:00000000000000ff .LASF22
GAS LISTING /tmp/cc098How.s 			page 18


     /tmp/cc098How.s:1585   .debug_str:00000000000001f5 .LASF24
     /tmp/cc098How.s:207    .text:00000000000000f4 .LFB4
     /tmp/cc098How.s:443    .text:00000000000002b4 .LFE4
     /tmp/cc098How.s:1553   .debug_str:000000000000007a .LASF25
     /tmp/cc098How.s:1464   .debug_loc:000000000000020c .LLST2
     /tmp/cc098How.s:1475   .debug_loc:0000000000000242 .LLST3
     /tmp/cc098How.s:1494   .debug_loc:0000000000000280 .LLST4
     /tmp/cc098How.s:1525   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc098How.s:1505   .debug_loc:00000000000002b6 .LLST5
     /tmp/cc098How.s:365    .text:00000000000001f8 .LBB5
     /tmp/cc098How.s:438    .text:00000000000002b4 .LBE5
     /tmp/cc098How.s:1581   .debug_str:00000000000001e5 .LASF26
     /tmp/cc098How.s:1613   .debug_str:00000000000002b9 .LASF27
     /tmp/cc098How.s:391    .text:0000000000000224 .LVL35
     /tmp/cc098How.s:396    .text:0000000000000230 .LVL36
     /tmp/cc098How.s:401    .text:0000000000000240 .LVL37
     /tmp/cc098How.s:406    .text:000000000000024c .LVL38
     /tmp/cc098How.s:410    .text:0000000000000254 .LVL39
     /tmp/cc098How.s:416    .text:000000000000026c .LVL40
     /tmp/cc098How.s:428    .text:0000000000000294 .LVL41
     /tmp/cc098How.s:436    .text:00000000000002b0 .LVL42
     /tmp/cc098How.s:282    .text:0000000000000150 .LVL24
     /tmp/cc098How.s:287    .text:000000000000015c .LVL25
     /tmp/cc098How.s:241    .text:0000000000000124 .LVL20
     /tmp/cc098How.s:294    .text:0000000000000164 .LVL26
     /tmp/cc098How.s:343    .text:00000000000001c4 .LVL28
     /tmp/cc098How.s:350    .text:00000000000001dc .LVL29
     /tmp/cc098How.s:355    .text:00000000000001ec .LVL30
     /tmp/cc098How.s:359    .text:00000000000001f4 .LVL31
     /tmp/cc098How.s:1579   .debug_str:00000000000001e0 .LASF42
     /tmp/cc098How.s:10     .text:0000000000000000 .LFB3
     /tmp/cc098How.s:66     .text:000000000000003c .LFE3
     /tmp/cc098How.s:1607   .debug_str:0000000000000291 .LASF28
     /tmp/cc098How.s:1563   .debug_str:00000000000000bc .LASF30
     /tmp/cc098How.s:1547   .debug_str:000000000000004a .LASF29
     /tmp/cc098How.s:1551   .debug_str:0000000000000070 .LASF31
     /tmp/cc098How.s:1583   .debug_str:00000000000001ea .LASF32
     /tmp/cc098How.s:1539   .debug_str:000000000000001a .LASF33
     /tmp/cc098How.s:1605   .debug_str:0000000000000281 .LASF34
     /tmp/cc098How.s:1611   .debug_str:00000000000002b1 .LASF35
     /tmp/cc098How.s:1575   .debug_str:000000000000010c .LASF36
     /tmp/cc098How.s:1559   .debug_str:00000000000000a3 .LASF37
     /tmp/cc098How.s:1617   .debug_str:00000000000002d4 .LASF38
     /tmp/cc098How.s:92     .text:000000000000003c .LVL0
     /tmp/cc098How.s:118    .text:0000000000000078 .LVL1
     /tmp/cc098How.s:134    .text:0000000000000090 .LVL3
     /tmp/cc098How.s:140    .text:0000000000000098 .LVL4
     /tmp/cc098How.s:144    .text:00000000000000a4 .LVL6
     /tmp/cc098How.s:149    .text:00000000000000ac .LVL7
     /tmp/cc098How.s:153    .text:00000000000000b8 .LVL9
     /tmp/cc098How.s:158    .text:00000000000000c0 .LVL10
     /tmp/cc098How.s:162    .text:00000000000000cc .LVL12
     /tmp/cc098How.s:167    .text:00000000000000d4 .LVL13
     /tmp/cc098How.s:171    .text:00000000000000e0 .LVL15
     /tmp/cc098How.s:176    .text:00000000000000e8 .LVL16
     /tmp/cc098How.s:229    .text:0000000000000110 .LVL18
     /tmp/cc098How.s:257    .text:0000000000000130 .LVL21
GAS LISTING /tmp/cc098How.s 			page 19


     /tmp/cc098How.s:309    .text:000000000000017c .LVL27
     /tmp/cc098How.s:361    .text:00000000000001f8 .LVL32
     /tmp/cc098How.s:235    .text:0000000000000114 .LVL19
     /tmp/cc098How.s:261    .text:0000000000000138 .LVL22
     /tmp/cc098How.s:379    .text:0000000000000200 .LVL34
     /tmp/cc098How.s:276    .text:0000000000000140 .LVL23
     /tmp/cc098How.s:459    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc098How.s:245    .text:0000000000000128 .LBB3
     /tmp/cc098How.s:289    .text:000000000000015c .LBE3
     /tmp/cc098How.s:363    .text:00000000000001f8 .LBB7
     /tmp/cc098How.s:440    .text:00000000000002b4 .LBE7

UNDEFINED SYMBOLS
trapRoutine
_Z10putNewlinev
_Z9putStringPKc
_Z6putU64m
console_handler
_Z6putInti
_Z7_assertbPKci
