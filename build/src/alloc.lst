GAS LISTING /tmp/cc1wo5Wt.s 			page 1


   1              		.file	"alloc.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN8MemAllocC2Ev
   9              	_ZN8MemAllocC2Ev:
  10              	.LFB4:
  11              		.file 1 "src/alloc.cpp"
   1:src/alloc.cpp **** #include "../h/alloc.h"
   2:src/alloc.cpp **** #include "../lib/console.h"
   3:src/alloc.cpp **** #include "../h/my_console.h"
   4:src/alloc.cpp **** 
   5:src/alloc.cpp **** MemAlloc::MemAlloc()
  12              		.loc 1 5 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LVL1:
  22              	.LBB6:
  23              	.LBB7:
  24              	.LBB8:
  25              		.file 2 "src/../h/alloc.h"
   1:src/../h/alloc.h **** #ifndef PROJECT_BASE_V1_1_ALLOC_H
   2:src/../h/alloc.h **** #define PROJECT_BASE_V1_1_ALLOC_H
   3:src/../h/alloc.h **** 
   4:src/../h/alloc.h **** #endif //PROJECT_BASE_V1_1_ALLOC_H
   5:src/../h/alloc.h **** 
   6:src/../h/alloc.h **** #include "../lib/hw.h"
   7:src/../h/alloc.h **** #include "../h/my_console.h"
   8:src/../h/alloc.h **** 
   9:src/../h/alloc.h **** class MemAlloc
  10:src/../h/alloc.h **** {
  11:src/../h/alloc.h **** public:
  12:src/../h/alloc.h ****     struct MemNode
  13:src/../h/alloc.h ****     {
  14:src/../h/alloc.h ****         MemNode* pPrev;
  15:src/../h/alloc.h ****         MemNode* pNext;
  16:src/../h/alloc.h ****         size_t size;
  17:src/../h/alloc.h ****         char* base;
  18:src/../h/alloc.h **** 
  19:src/../h/alloc.h **** 
  20:src/../h/alloc.h ****         // TODO: testirati da li ovo za nullptr default radi
  21:src/../h/alloc.h ****         MemNode(MemNode* pPrev = nullptr, MemNode* pNext = nullptr)
  22:src/../h/alloc.h ****         : pPrev(pPrev), pNext(pNext)
  26              		.loc 2 22 36 is_stmt 0
  27 000c 23300500 		sd	zero,0(a0)
  28 0010 23340500 		sd	zero,8(a0)
  29              	.LVL2:
  30              	.LBE8:
  31              	.LBE7:
GAS LISTING /tmp/cc1wo5Wt.s 			page 2


   6:src/alloc.cpp **** {
   7:src/alloc.cpp ****     freeHead.size = 1024 * 1024;
  32              		.loc 1 7 5 is_stmt 1
  33              		.loc 1 7 19 is_stmt 0
  34 0014 B7071000 		li	a5,1048576
  35 0018 2338F500 		sd	a5,16(a0)
  36              	.LBE6:
   8:src/alloc.cpp **** }
  37              		.loc 1 8 1
  38 001c 03348100 		ld	s0,8(sp)
  39              		.cfi_restore 8
  40              		.cfi_def_cfa 2, 16
  41 0020 13010101 		addi	sp,sp,16
  42              		.cfi_def_cfa_offset 0
  43 0024 67800000 		jr	ra
  44              		.cfi_endproc
  45              	.LFE4:
  47              		.globl	_ZN8MemAllocC1Ev
  48              		.set	_ZN8MemAllocC1Ev,_ZN8MemAllocC2Ev
  49              		.align	2
  50              		.globl	_ZN8MemAlloc3getEv
  52              	_ZN8MemAlloc3getEv:
  53              	.LFB6:
   9:src/alloc.cpp **** 
  10:src/alloc.cpp **** // TODO: wtf? ne mogu staviti pNext na neke vrednosti tipa 100, 1000, 10^n...
  11:src/alloc.cpp **** // : freeHead(0, (MemNode*)((sizeof(MemAlloc)+1)*100))
  12:src/alloc.cpp **** //  :freeHead(0, (MemNode*)100)
  13:src/alloc.cpp **** //  putInt((long long)freeHead.pPrev);
  14:src/alloc.cpp **** //  putInt((long long)freeHead.pNext);
  15:src/alloc.cpp **** //  freeHead.pPrev = (MemNode*)0;
  16:src/alloc.cpp **** //  freeHead.pNext = (MemNode*)100000000;
  17:src/alloc.cpp **** 
  18:src/alloc.cpp **** MemAlloc* MemAlloc::get()
  19:src/alloc.cpp **** {
  54              		.loc 1 19 1 is_stmt 1
  55              		.cfi_startproc
  20:src/alloc.cpp ****     static MemAlloc instance;
  56              		.loc 1 20 5
  57              		.loc 1 20 21 is_stmt 0
  58 0028 97070000 		lbu	a5,.LANCHOR0
  58      83C70700 
  59 0030 63880700 		beqz	a5,.L9
  21:src/alloc.cpp ****     return &instance;
  60              		.loc 1 21 5 is_stmt 1
  22:src/alloc.cpp **** }
  61              		.loc 1 22 1 is_stmt 0
  62 0034 17050000 		lla	a0,.LANCHOR0+8
  62      13050500 
  63 003c 67800000 		ret
  64              	.L9:
  19:src/alloc.cpp ****     static MemAlloc instance;
  65              		.loc 1 19 1 discriminator 1
  66 0040 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 0044 23341100 		sd	ra,8(sp)
  69 0048 23308100 		sd	s0,0(sp)
  70              		.cfi_offset 1, -8
GAS LISTING /tmp/cc1wo5Wt.s 			page 3


  71              		.cfi_offset 8, -16
  72 004c 13040101 		addi	s0,sp,16
  73              		.cfi_def_cfa 8, 0
  20:src/alloc.cpp ****     return &instance;
  74              		.loc 1 20 21 discriminator 1
  75 0050 17050000 		lla	a0,.LANCHOR0+8
  75      13050500 
  76 0058 97000000 		call	_ZN8MemAllocC1Ev
  76      E7800000 
  77              	.LVL3:
  78 0060 93071000 		li	a5,1
  79 0064 17070000 		sb	a5,.LANCHOR0,a4
  79      2300F700 
  21:src/alloc.cpp **** }
  80              		.loc 1 21 5 is_stmt 1 discriminator 1
  81              		.loc 1 22 1 is_stmt 0 discriminator 1
  82 006c 17050000 		lla	a0,.LANCHOR0+8
  82      13050500 
  83 0074 83308100 		ld	ra,8(sp)
  84              		.cfi_restore 1
  85 0078 03340100 		ld	s0,0(sp)
  86              		.cfi_restore 8
  87              		.cfi_def_cfa 2, 16
  88 007c 13010101 		addi	sp,sp,16
  89              		.cfi_def_cfa_offset 0
  90 0080 67800000 		jr	ra
  91              		.cfi_endproc
  92              	.LFE6:
  94              		.section	.rodata.str1.8,"aMS",@progbits,1
  95              		.align	3
  96              	.LC0:
  97 0000 7372632F 		.string	"src/alloc.cpp"
  97      616C6C6F 
  97      632E6370 
  97      7000
  98              		.text
  99              		.align	2
 100              		.globl	_ZN8MemAlloc8allocMemEm
 102              	_ZN8MemAlloc8allocMemEm:
 103              	.LFB7:
  23:src/alloc.cpp **** 
  24:src/alloc.cpp **** void* MemAlloc::allocMem(size_t size)
  25:src/alloc.cpp **** {
 104              		.loc 1 25 1 is_stmt 1
 105              		.cfi_startproc
 106              	.LVL4:
 107 0084 130101FE 		addi	sp,sp,-32
 108              		.cfi_def_cfa_offset 32
 109 0088 233C1100 		sd	ra,24(sp)
 110 008c 23388100 		sd	s0,16(sp)
 111 0090 23349100 		sd	s1,8(sp)
 112 0094 23302101 		sd	s2,0(sp)
 113              		.cfi_offset 1, -8
 114              		.cfi_offset 8, -16
 115              		.cfi_offset 9, -24
 116              		.cfi_offset 18, -32
 117 0098 13040102 		addi	s0,sp,32
GAS LISTING /tmp/cc1wo5Wt.s 			page 4


 118              		.cfi_def_cfa 8, 0
 119 009c 93040500 		mv	s1,a0
 120 00a0 13890500 		mv	s2,a1
  26:src/alloc.cpp ****     // puts it in the first place large enough found
  27:src/alloc.cpp **** 
  28:src/alloc.cpp ****     if(size % MEM_BLOCK_SIZE != 0) // align size
 121              		.loc 1 28 5
 122              		.loc 1 28 13 is_stmt 0
 123 00a4 93F7F503 		andi	a5,a1,63
 124              		.loc 1 28 5
 125 00a8 63860700 		beqz	a5,.L11
  29:src/alloc.cpp ****     {
  30:src/alloc.cpp ****         size += MEM_BLOCK_SIZE - (size % MEM_BLOCK_SIZE);
 126              		.loc 1 30 9 is_stmt 1
 127              		.loc 1 30 14 is_stmt 0
 128 00ac 13F905FC 		andi	s2,a1,-64
 129 00b0 13090904 		addi	s2,s2,64
 130              	.LVL5:
 131              	.L11:
  31:src/alloc.cpp ****     }
  32:src/alloc.cpp **** 
  33:src/alloc.cpp ****     assert(size % MEM_BLOCK_SIZE == 0);
 132              		.loc 1 33 5 is_stmt 1
 133 00b4 1375F903 		andi	a0,s2,63
 134              	.LVL6:
 135 00b8 13061002 		li	a2,33
 136 00bc 97050000 		lla	a1,.LC0
 136      93850500 
 137 00c4 13351500 		seqz	a0,a0
 138 00c8 97000000 		call	_Z7_assertbPKci@plt
 138      E7800000 
 139              	.LVL7:
  34:src/alloc.cpp **** 
  35:src/alloc.cpp ****     MemNode* pCur = &freeHead;
 140              		.loc 1 35 5
 141              	.L15:
  36:src/alloc.cpp ****     while(pCur != nullptr)
 142              		.loc 1 36 5
 143              		.loc 1 36 16
 144 00d0 638A0404 		beqz	s1,.L12
 145              	.LBB9:
  37:src/alloc.cpp ****     {
  38:src/alloc.cpp ****         if(pCur->size >= size)
 146              		.loc 1 38 9
 147              	.LBB10:
 148              		.loc 1 38 18 is_stmt 0
 149 00d4 83B70401 		ld	a5,16(s1)
 150              		.loc 1 38 9
 151 00d8 63F62701 		bgeu	a5,s2,.L17
 152              	.LBE10:
  39:src/alloc.cpp ****         {
  40:src/alloc.cpp ****             assert((uint64)pCur->base % MEM_BLOCK_SIZE == 0); // check for alignment errors
  41:src/alloc.cpp ****             void* ret = pCur->base;
  42:src/alloc.cpp ****             pCur->size -= size;
  43:src/alloc.cpp ****             pCur->base += size;
  44:src/alloc.cpp ****             return ret;
  45:src/alloc.cpp ****         }
GAS LISTING /tmp/cc1wo5Wt.s 			page 5


  46:src/alloc.cpp **** 
  47:src/alloc.cpp ****         pCur = pCur->pNext;
 153              		.loc 1 47 9 is_stmt 1
 154              		.loc 1 47 14 is_stmt 0
 155 00dc 83B48400 		ld	s1,8(s1)
 156              	.LVL8:
 157              	.LBE9:
  36:src/alloc.cpp ****     {
 158              		.loc 1 36 5
 159 00e0 6FF01FFF 		j	.L15
 160              	.L17:
 161              	.LBB13:
 162              	.LBB12:
 163              	.LBB11:
  40:src/alloc.cpp ****             void* ret = pCur->base;
 164              		.loc 1 40 13 is_stmt 1
 165 00e4 03B58401 		ld	a0,24(s1)
 166 00e8 1375F503 		andi	a0,a0,63
 167 00ec 13068002 		li	a2,40
 168 00f0 97050000 		lla	a1,.LC0
 168      93850500 
 169 00f8 13351500 		seqz	a0,a0
 170 00fc 97000000 		call	_Z7_assertbPKci@plt
 170      E7800000 
 171              	.LVL9:
  41:src/alloc.cpp ****             pCur->size -= size;
 172              		.loc 1 41 13
  41:src/alloc.cpp ****             pCur->size -= size;
 173              		.loc 1 41 19 is_stmt 0
 174 0104 03B78401 		ld	a4,24(s1)
 175              	.LVL10:
  42:src/alloc.cpp ****             pCur->base += size;
 176              		.loc 1 42 13 is_stmt 1
  42:src/alloc.cpp ****             pCur->base += size;
 177              		.loc 1 42 24 is_stmt 0
 178 0108 83B70401 		ld	a5,16(s1)
 179 010c B3872741 		sub	a5,a5,s2
 180 0110 23B8F400 		sd	a5,16(s1)
  43:src/alloc.cpp ****             return ret;
 181              		.loc 1 43 13 is_stmt 1
  43:src/alloc.cpp ****             return ret;
 182              		.loc 1 43 24 is_stmt 0
 183 0114 33092701 		add	s2,a4,s2
 184              	.LVL11:
 185 0118 23BC2401 		sd	s2,24(s1)
  44:src/alloc.cpp ****         }
 186              		.loc 1 44 13 is_stmt 1
  44:src/alloc.cpp ****         }
 187              		.loc 1 44 20 is_stmt 0
 188 011c 93040700 		mv	s1,a4
 189              	.LVL12:
 190 0120 6F00C001 		j	.L10
 191              	.LVL13:
 192              	.L12:
 193              	.LBE11:
 194              	.LBE12:
 195              	.LBE13:
GAS LISTING /tmp/cc1wo5Wt.s 			page 6


  48:src/alloc.cpp ****     }
  49:src/alloc.cpp **** 
  50:src/alloc.cpp ****     assert(false); // there is no slot large enough
 196              		.loc 1 50 5 is_stmt 1
 197 0124 13062003 		li	a2,50
 198 0128 97050000 		lla	a1,.LC0
 198      93850500 
 199 0130 13050000 		li	a0,0
 200 0134 97000000 		call	_Z7_assertbPKci@plt
 200      E7800000 
 201              	.LVL14:
  51:src/alloc.cpp ****     return nullptr;
 202              		.loc 1 51 5
 203              	.L10:
  52:src/alloc.cpp **** 
  53:src/alloc.cpp **** }
 204              		.loc 1 53 1 is_stmt 0
 205 013c 13850400 		mv	a0,s1
 206 0140 83308101 		ld	ra,24(sp)
 207              		.cfi_restore 1
 208 0144 03340101 		ld	s0,16(sp)
 209              		.cfi_restore 8
 210              		.cfi_def_cfa 2, 32
 211 0148 83348100 		ld	s1,8(sp)
 212              		.cfi_restore 9
 213 014c 03390100 		ld	s2,0(sp)
 214              		.cfi_restore 18
 215 0150 13010102 		addi	sp,sp,32
 216              		.cfi_def_cfa_offset 0
 217 0154 67800000 		jr	ra
 218              		.cfi_endproc
 219              	.LFE7:
 221              		.bss
 222              		.align	3
 223              		.set	.LANCHOR0,. + 0
 226              	_ZGVZN8MemAlloc3getEvE8instance:
 227 0000 00000000 		.zero	8
 227      00000000 
 230              	_ZZN8MemAlloc3getEvE8instance:
 231 0008 00000000 		.zero	32
 231      00000000 
 231      00000000 
 231      00000000 
 231      00000000 
 232              		.text
 233              	.Letext0:
 234              		.file 3 "src/../h/../lib/hw.h"
 235              		.file 4 "src/../h/my_console.h"
GAS LISTING /tmp/cc1wo5Wt.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 alloc.cpp
     /tmp/cc1wo5Wt.s:9      .text:0000000000000000 _ZN8MemAllocC2Ev
     /tmp/cc1wo5Wt.s:13     .text:0000000000000000 .L0 
     /tmp/cc1wo5Wt.s:15     .text:0000000000000000 .L0 
     /tmp/cc1wo5Wt.s:16     .text:0000000000000004 .L0 
     /tmp/cc1wo5Wt.s:18     .text:0000000000000008 .L0 
     /tmp/cc1wo5Wt.s:20     .text:000000000000000c .L0 
     /tmp/cc1wo5Wt.s:27     .text:000000000000000c .L0 
     /tmp/cc1wo5Wt.s:33     .text:0000000000000014 .L0 
     /tmp/cc1wo5Wt.s:34     .text:0000000000000014 .L0 
     /tmp/cc1wo5Wt.s:38     .text:000000000000001c .L0 
     /tmp/cc1wo5Wt.s:39     .text:0000000000000020 .L0 
     /tmp/cc1wo5Wt.s:40     .text:0000000000000020 .L0 
     /tmp/cc1wo5Wt.s:42     .text:0000000000000024 .L0 
     /tmp/cc1wo5Wt.s:44     .text:0000000000000028 .L0 
     /tmp/cc1wo5Wt.s:9      .text:0000000000000000 _ZN8MemAllocC1Ev
     /tmp/cc1wo5Wt.s:52     .text:0000000000000028 _ZN8MemAlloc3getEv
     /tmp/cc1wo5Wt.s:55     .text:0000000000000028 .L0 
     /tmp/cc1wo5Wt.s:56     .text:0000000000000028 .L0 
     /tmp/cc1wo5Wt.s:57     .text:0000000000000028 .L0 
     /tmp/cc1wo5Wt.s:58     .text:0000000000000028 .L0 
     /tmp/cc1wo5Wt.s:61     .text:0000000000000034 .L0 
     /tmp/cc1wo5Wt.s:62     .text:0000000000000034 .L0 
     /tmp/cc1wo5Wt.s:66     .text:0000000000000040 .L0 
     /tmp/cc1wo5Wt.s:67     .text:0000000000000044 .L0 
     /tmp/cc1wo5Wt.s:70     .text:000000000000004c .L0 
     /tmp/cc1wo5Wt.s:71     .text:000000000000004c .L0 
     /tmp/cc1wo5Wt.s:73     .text:0000000000000050 .L0 
     /tmp/cc1wo5Wt.s:75     .text:0000000000000050 .L0 
     /tmp/cc1wo5Wt.s:81     .text:000000000000006c .L0 
     /tmp/cc1wo5Wt.s:82     .text:000000000000006c .L0 
     /tmp/cc1wo5Wt.s:84     .text:0000000000000078 .L0 
     /tmp/cc1wo5Wt.s:86     .text:000000000000007c .L0 
     /tmp/cc1wo5Wt.s:87     .text:000000000000007c .L0 
     /tmp/cc1wo5Wt.s:89     .text:0000000000000080 .L0 
     /tmp/cc1wo5Wt.s:91     .text:0000000000000084 .L0 
     /tmp/cc1wo5Wt.s:102    .text:0000000000000084 _ZN8MemAlloc8allocMemEm
     /tmp/cc1wo5Wt.s:105    .text:0000000000000084 .L0 
     /tmp/cc1wo5Wt.s:107    .text:0000000000000084 .L0 
     /tmp/cc1wo5Wt.s:108    .text:0000000000000088 .L0 
     /tmp/cc1wo5Wt.s:113    .text:0000000000000098 .L0 
     /tmp/cc1wo5Wt.s:114    .text:0000000000000098 .L0 
     /tmp/cc1wo5Wt.s:115    .text:0000000000000098 .L0 
     /tmp/cc1wo5Wt.s:116    .text:0000000000000098 .L0 
     /tmp/cc1wo5Wt.s:118    .text:000000000000009c .L0 
     /tmp/cc1wo5Wt.s:122    .text:00000000000000a4 .L0 
     /tmp/cc1wo5Wt.s:123    .text:00000000000000a4 .L0 
     /tmp/cc1wo5Wt.s:125    .text:00000000000000a8 .L0 
     /tmp/cc1wo5Wt.s:127    .text:00000000000000ac .L0 
     /tmp/cc1wo5Wt.s:128    .text:00000000000000ac .L0 
     /tmp/cc1wo5Wt.s:133    .text:00000000000000b4 .L0 
     /tmp/cc1wo5Wt.s:142    .text:00000000000000d0 .L0 
     /tmp/cc1wo5Wt.s:143    .text:00000000000000d0 .L0 
     /tmp/cc1wo5Wt.s:144    .text:00000000000000d0 .L0 
     /tmp/cc1wo5Wt.s:148    .text:00000000000000d4 .L0 
     /tmp/cc1wo5Wt.s:149    .text:00000000000000d4 .L0 
GAS LISTING /tmp/cc1wo5Wt.s 			page 8


     /tmp/cc1wo5Wt.s:151    .text:00000000000000d8 .L0 
     /tmp/cc1wo5Wt.s:154    .text:00000000000000dc .L0 
     /tmp/cc1wo5Wt.s:155    .text:00000000000000dc .L0 
     /tmp/cc1wo5Wt.s:159    .text:00000000000000e0 .L0 
     /tmp/cc1wo5Wt.s:165    .text:00000000000000e4 .L0 
     /tmp/cc1wo5Wt.s:173    .text:0000000000000104 .L0 
     /tmp/cc1wo5Wt.s:174    .text:0000000000000104 .L0 
     /tmp/cc1wo5Wt.s:177    .text:0000000000000108 .L0 
     /tmp/cc1wo5Wt.s:178    .text:0000000000000108 .L0 
     /tmp/cc1wo5Wt.s:182    .text:0000000000000114 .L0 
     /tmp/cc1wo5Wt.s:183    .text:0000000000000114 .L0 
     /tmp/cc1wo5Wt.s:187    .text:000000000000011c .L0 
     /tmp/cc1wo5Wt.s:188    .text:000000000000011c .L0 
     /tmp/cc1wo5Wt.s:197    .text:0000000000000124 .L0 
     /tmp/cc1wo5Wt.s:204    .text:000000000000013c .L0 
     /tmp/cc1wo5Wt.s:205    .text:000000000000013c .L0 
     /tmp/cc1wo5Wt.s:207    .text:0000000000000144 .L0 
     /tmp/cc1wo5Wt.s:209    .text:0000000000000148 .L0 
     /tmp/cc1wo5Wt.s:210    .text:0000000000000148 .L0 
     /tmp/cc1wo5Wt.s:212    .text:000000000000014c .L0 
     /tmp/cc1wo5Wt.s:214    .text:0000000000000150 .L0 
     /tmp/cc1wo5Wt.s:216    .text:0000000000000154 .L0 
     /tmp/cc1wo5Wt.s:218    .text:0000000000000158 .L0 
     /tmp/cc1wo5Wt.s:223    .bss:0000000000000000 .LANCHOR0
     /tmp/cc1wo5Wt.s:226    .bss:0000000000000000 _ZGVZN8MemAlloc3getEvE8instance
     /tmp/cc1wo5Wt.s:230    .bss:0000000000000008 _ZZN8MemAlloc3getEvE8instance
     /tmp/cc1wo5Wt.s:236    .text:0000000000000158 .L0 
     /tmp/cc1wo5Wt.s:58     .text:0000000000000028 .L0 
     /tmp/cc1wo5Wt.s:62     .text:0000000000000034 .L0 
     /tmp/cc1wo5Wt.s:75     .text:0000000000000050 .L0 
     /tmp/cc1wo5Wt.s:79     .text:0000000000000064 .L0 
     /tmp/cc1wo5Wt.s:82     .text:000000000000006c .L0 
     /tmp/cc1wo5Wt.s:96     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc1wo5Wt.s:136    .text:00000000000000bc .L0 
     /tmp/cc1wo5Wt.s:168    .text:00000000000000f0 .L0 
     /tmp/cc1wo5Wt.s:198    .text:0000000000000128 .L0 
     /tmp/cc1wo5Wt.s:64     .text:0000000000000040 .L9
     /tmp/cc1wo5Wt.s:131    .text:00000000000000b4 .L11
     /tmp/cc1wo5Wt.s:192    .text:0000000000000124 .L12
     /tmp/cc1wo5Wt.s:160    .text:00000000000000e4 .L17
     /tmp/cc1wo5Wt.s:141    .text:00000000000000d0 .L15
     /tmp/cc1wo5Wt.s:203    .text:000000000000013c .L10
     /tmp/cc1wo5Wt.s:717    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc1wo5Wt.s:1465   .debug_str:00000000000000f7 .LASF33
     /tmp/cc1wo5Wt.s:1509   .debug_str:00000000000002f6 .LASF34
     /tmp/cc1wo5Wt.s:1491   .debug_str:000000000000026c .LASF35
     /tmp/cc1wo5Wt.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc1wo5Wt.s:233    .text:0000000000000158 .Letext0
     /tmp/cc1wo5Wt.s:1427   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc1wo5Wt.s:1475   .debug_str:00000000000001fa .LASF0
     /tmp/cc1wo5Wt.s:1459   .debug_str:00000000000000c7 .LASF1
     /tmp/cc1wo5Wt.s:1453   .debug_str:00000000000000a2 .LASF2
     /tmp/cc1wo5Wt.s:1441   .debug_str:0000000000000052 .LASF4
     /tmp/cc1wo5Wt.s:1457   .debug_str:00000000000000b5 .LASF3
     /tmp/cc1wo5Wt.s:1433   .debug_str:0000000000000019 .LASF5
     /tmp/cc1wo5Wt.s:1431   .debug_str:0000000000000006 .LASF6
     /tmp/cc1wo5Wt.s:1449   .debug_str:0000000000000080 .LASF7
GAS LISTING /tmp/cc1wo5Wt.s 			page 9


     /tmp/cc1wo5Wt.s:1479   .debug_str:000000000000020c .LASF8
     /tmp/cc1wo5Wt.s:1437   .debug_str:0000000000000025 .LASF9
     /tmp/cc1wo5Wt.s:1511   .debug_str:0000000000000304 .LASF10
     /tmp/cc1wo5Wt.s:1451   .debug_str:0000000000000093 .LASF11
     /tmp/cc1wo5Wt.s:1501   .debug_str:00000000000002bc .LASF12
     /tmp/cc1wo5Wt.s:1487   .debug_str:0000000000000253 .LASF13
     /tmp/cc1wo5Wt.s:1463   .debug_str:00000000000000eb .LASF14
     /tmp/cc1wo5Wt.s:1447   .debug_str:000000000000006a .LASF15
     /tmp/cc1wo5Wt.s:1481   .debug_str:000000000000021c .LASF16
     /tmp/cc1wo5Wt.s:1473   .debug_str:00000000000001f1 .LASF26
     /tmp/cc1wo5Wt.s:1445   .debug_str:0000000000000062 .LASF25
     /tmp/cc1wo5Wt.s:1505   .debug_str:00000000000002eb .LASF17
     /tmp/cc1wo5Wt.s:1429   .debug_str:0000000000000000 .LASF18
     /tmp/cc1wo5Wt.s:1507   .debug_str:00000000000002f1 .LASF19
     /tmp/cc1wo5Wt.s:1471   .debug_str:00000000000001ec .LASF20
     /tmp/cc1wo5Wt.s:1503   .debug_str:00000000000002cc .LASF27
     /tmp/cc1wo5Wt.s:1497   .debug_str:00000000000002a1 .LASF36
     /tmp/cc1wo5Wt.s:1443   .debug_str:0000000000000059 .LASF37
     /tmp/cc1wo5Wt.s:1493   .debug_str:000000000000028f .LASF21
     /tmp/cc1wo5Wt.s:1469   .debug_str:00000000000001d4 .LASF23
     /tmp/cc1wo5Wt.s:1489   .debug_str:0000000000000263 .LASF22
     /tmp/cc1wo5Wt.s:1467   .debug_str:00000000000001bb .LASF24
     /tmp/cc1wo5Wt.s:1461   .debug_str:00000000000000da .LASF28
     /tmp/cc1wo5Wt.s:1477   .debug_str:0000000000000207 .LASF29
     /tmp/cc1wo5Wt.s:103    .text:0000000000000084 .LFB7
     /tmp/cc1wo5Wt.s:219    .text:0000000000000158 .LFE7
     /tmp/cc1wo5Wt.s:1455   .debug_str:00000000000000b0 .LASF32
     /tmp/cc1wo5Wt.s:1348   .debug_loc:0000000000000000 .LLST3
     /tmp/cc1wo5Wt.s:1366   .debug_loc:000000000000004c .LLST4
     /tmp/cc1wo5Wt.s:1435   .debug_str:0000000000000020 .LASF30
     /tmp/cc1wo5Wt.s:1381   .debug_loc:0000000000000095 .LLST5
     /tmp/cc1wo5Wt.s:163    .text:00000000000000e4 .LBB11
     /tmp/cc1wo5Wt.s:193    .text:0000000000000124 .LBE11
     /tmp/cc1wo5Wt.s:1392   .debug_loc:00000000000000cb .LLST6
     /tmp/cc1wo5Wt.s:171    .text:0000000000000104 .LVL9
     /tmp/cc1wo5Wt.s:139    .text:00000000000000d0 .LVL7
     /tmp/cc1wo5Wt.s:201    .text:000000000000013c .LVL14
     /tmp/cc1wo5Wt.s:53     .text:0000000000000028 .LFB6
     /tmp/cc1wo5Wt.s:92     .text:0000000000000084 .LFE6
     /tmp/cc1wo5Wt.s:1495   .debug_str:0000000000000298 .LASF31
     /tmp/cc1wo5Wt.s:77     .text:0000000000000060 .LVL3
     /tmp/cc1wo5Wt.s:1485   .debug_str:0000000000000242 .LASF38
     /tmp/cc1wo5Wt.s:10     .text:0000000000000000 .LFB4
     /tmp/cc1wo5Wt.s:45     .text:0000000000000028 .LFE4
     /tmp/cc1wo5Wt.s:23     .text:000000000000000c .LBB7
     /tmp/cc1wo5Wt.s:31     .text:0000000000000014 .LBE7
     /tmp/cc1wo5Wt.s:1399   .debug_loc:00000000000000ee .LLST0
     /tmp/cc1wo5Wt.s:1407   .debug_loc:0000000000000112 .LLST2
     /tmp/cc1wo5Wt.s:1439   .debug_str:0000000000000033 .LASF39
     /tmp/cc1wo5Wt.s:1483   .debug_str:0000000000000232 .LASF40
     /tmp/cc1wo5Wt.s:1499   .debug_str:00000000000002b4 .LASF41
     /tmp/cc1wo5Wt.s:106    .text:0000000000000084 .LVL4
     /tmp/cc1wo5Wt.s:134    .text:00000000000000b8 .LVL6
     /tmp/cc1wo5Wt.s:130    .text:00000000000000b4 .LVL5
     /tmp/cc1wo5Wt.s:184    .text:0000000000000118 .LVL11
     /tmp/cc1wo5Wt.s:191    .text:0000000000000124 .LVL13
     /tmp/cc1wo5Wt.s:189    .text:0000000000000120 .LVL12
GAS LISTING /tmp/cc1wo5Wt.s 			page 10


     /tmp/cc1wo5Wt.s:175    .text:0000000000000108 .LVL10
     /tmp/cc1wo5Wt.s:21     .text:000000000000000c .LVL1
     /tmp/cc1wo5Wt.s:29     .text:0000000000000014 .LVL2
     /tmp/cc1wo5Wt.s:237    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z7_assertbPKci
