GAS LISTING /tmp/ccerZjSf.s 			page 1


   1              		.file	"alloc.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN8MemAllocC2Ev
   9              	_ZN8MemAllocC2Ev:
  10              	.LFB4:
  11              		.file 1 "src/alloc.cpp"
   1:src/alloc.cpp **** #include "../h/alloc.h"
   2:src/alloc.cpp **** #include "../lib/console.h"
   3:src/alloc.cpp **** #include "../h/my_console.h"
   4:src/alloc.cpp **** 
   5:src/alloc.cpp **** MemAlloc::MemAlloc()
  12              		.loc 1 5 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LVL1:
  22              	.LBB6:
  23              	.LBB7:
  24              	.LBB8:
  25              		.file 2 "src/../h/alloc.h"
   1:src/../h/alloc.h **** #ifndef PROJECT_BASE_V1_1_ALLOC_H
   2:src/../h/alloc.h **** #define PROJECT_BASE_V1_1_ALLOC_H
   3:src/../h/alloc.h **** 
   4:src/../h/alloc.h **** #endif //PROJECT_BASE_V1_1_ALLOC_H
   5:src/../h/alloc.h **** 
   6:src/../h/alloc.h **** #include "../lib/hw.h"
   7:src/../h/alloc.h **** #include "../h/my_console.h"
   8:src/../h/alloc.h **** 
   9:src/../h/alloc.h **** class MemAlloc
  10:src/../h/alloc.h **** {
  11:src/../h/alloc.h **** public:
  12:src/../h/alloc.h ****     struct MemNode
  13:src/../h/alloc.h ****     {
  14:src/../h/alloc.h ****         MemNode* pPrev;
  15:src/../h/alloc.h ****         MemNode* pNext;
  16:src/../h/alloc.h ****         size_t size;
  17:src/../h/alloc.h ****         char* base;
  18:src/../h/alloc.h **** 
  19:src/../h/alloc.h **** 
  20:src/../h/alloc.h ****         // TODO: testirati da li ovo za nullptr default radi
  21:src/../h/alloc.h ****         MemNode(MemNode* pPrev = nullptr, MemNode* pNext = nullptr)
  22:src/../h/alloc.h ****         : pPrev(pPrev), pNext(pNext)
  26              		.loc 2 22 36 is_stmt 0
  27 000c 23300500 		sd	zero,0(a0)
  28 0010 23340500 		sd	zero,8(a0)
  29              	.LVL2:
  30              	.LBE8:
  31              	.LBE7:
GAS LISTING /tmp/ccerZjSf.s 			page 2


   6:src/alloc.cpp **** {
   7:src/alloc.cpp ****     freeHead.size = 1024 * 1024;
  32              		.loc 1 7 5 is_stmt 1
  33              		.loc 1 7 19 is_stmt 0
  34 0014 B7071000 		li	a5,1048576
  35 0018 2338F500 		sd	a5,16(a0)
  36              	.LBE6:
   8:src/alloc.cpp **** }
  37              		.loc 1 8 1
  38 001c 03348100 		ld	s0,8(sp)
  39              		.cfi_restore 8
  40              		.cfi_def_cfa 2, 16
  41 0020 13010101 		addi	sp,sp,16
  42              		.cfi_def_cfa_offset 0
  43 0024 67800000 		jr	ra
  44              		.cfi_endproc
  45              	.LFE4:
  47              		.globl	_ZN8MemAllocC1Ev
  48              		.set	_ZN8MemAllocC1Ev,_ZN8MemAllocC2Ev
  49              		.align	2
  50              		.globl	_ZN8MemAlloc3getEv
  52              	_ZN8MemAlloc3getEv:
  53              	.LFB6:
   9:src/alloc.cpp **** 
  10:src/alloc.cpp **** // TODO: wtf? ne mogu staviti pNext na neke vrednosti tipa 100, 1000, 10^n...
  11:src/alloc.cpp **** // : freeHead(0, (MemNode*)((sizeof(MemAlloc)+1)*100))
  12:src/alloc.cpp **** //  :freeHead(0, (MemNode*)100)
  13:src/alloc.cpp **** //  putInt((long long)freeHead.pPrev);
  14:src/alloc.cpp **** //  putInt((long long)freeHead.pNext);
  15:src/alloc.cpp **** //  freeHead.pPrev = (MemNode*)0;
  16:src/alloc.cpp **** //  freeHead.pNext = (MemNode*)100000000;
  17:src/alloc.cpp **** 
  18:src/alloc.cpp **** MemAlloc* MemAlloc::get()
  19:src/alloc.cpp **** {
  54              		.loc 1 19 1 is_stmt 1
  55              		.cfi_startproc
  20:src/alloc.cpp ****     static MemAlloc instance;
  56              		.loc 1 20 5
  57              		.loc 1 20 21 is_stmt 0
  58 0028 97070000 		lbu	a5,.LANCHOR0
  58      83C70700 
  59 0030 63880700 		beqz	a5,.L9
  21:src/alloc.cpp ****     return &instance;
  60              		.loc 1 21 5 is_stmt 1
  22:src/alloc.cpp **** }
  61              		.loc 1 22 1 is_stmt 0
  62 0034 17050000 		lla	a0,.LANCHOR0+8
  62      13050500 
  63 003c 67800000 		ret
  64              	.L9:
  19:src/alloc.cpp ****     static MemAlloc instance;
  65              		.loc 1 19 1 discriminator 1
  66 0040 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 0044 23341100 		sd	ra,8(sp)
  69 0048 23308100 		sd	s0,0(sp)
  70              		.cfi_offset 1, -8
GAS LISTING /tmp/ccerZjSf.s 			page 3


  71              		.cfi_offset 8, -16
  72 004c 13040101 		addi	s0,sp,16
  73              		.cfi_def_cfa 8, 0
  20:src/alloc.cpp ****     return &instance;
  74              		.loc 1 20 21 discriminator 1
  75 0050 17050000 		lla	a0,.LANCHOR0+8
  75      13050500 
  76 0058 97000000 		call	_ZN8MemAllocC1Ev
  76      E7800000 
  77              	.LVL3:
  78 0060 93071000 		li	a5,1
  79 0064 17070000 		sb	a5,.LANCHOR0,a4
  79      2300F700 
  21:src/alloc.cpp **** }
  80              		.loc 1 21 5 is_stmt 1 discriminator 1
  81              		.loc 1 22 1 is_stmt 0 discriminator 1
  82 006c 17050000 		lla	a0,.LANCHOR0+8
  82      13050500 
  83 0074 83308100 		ld	ra,8(sp)
  84              		.cfi_restore 1
  85 0078 03340100 		ld	s0,0(sp)
  86              		.cfi_restore 8
  87              		.cfi_def_cfa 2, 16
  88 007c 13010101 		addi	sp,sp,16
  89              		.cfi_def_cfa_offset 0
  90 0080 67800000 		jr	ra
  91              		.cfi_endproc
  92              	.LFE6:
  94              		.section	.rodata.str1.8,"aMS",@progbits,1
  95              		.align	3
  96              	.LC0:
  97 0000 416C6C6F 		.string	"Allocating at least "
  97      63617469 
  97      6E672061 
  97      74206C65 
  97      61737420 
  98 0015 000000   		.align	3
  99              	.LC1:
 100 0018 20627974 		.string	" bytes"
 100      657300
 101 001f 00       		.align	3
 102              	.LC2:
 103 0020 7372632F 		.string	"src/alloc.cpp"
 103      616C6C6F 
 103      632E6370 
 103      7000
 104              		.text
 105              		.align	2
 106              		.globl	_ZN8MemAlloc8allocMemEm
 108              	_ZN8MemAlloc8allocMemEm:
 109              	.LFB7:
  23:src/alloc.cpp **** 
  24:src/alloc.cpp **** void* MemAlloc::allocMem(size_t size)
  25:src/alloc.cpp **** {
 110              		.loc 1 25 1 is_stmt 1
 111              		.cfi_startproc
 112              	.LVL4:
GAS LISTING /tmp/ccerZjSf.s 			page 4


 113 0084 130101FE 		addi	sp,sp,-32
 114              		.cfi_def_cfa_offset 32
 115 0088 233C1100 		sd	ra,24(sp)
 116 008c 23388100 		sd	s0,16(sp)
 117 0090 23349100 		sd	s1,8(sp)
 118 0094 23302101 		sd	s2,0(sp)
 119              		.cfi_offset 1, -8
 120              		.cfi_offset 8, -16
 121              		.cfi_offset 9, -24
 122              		.cfi_offset 18, -32
 123 0098 13040102 		addi	s0,sp,32
 124              		.cfi_def_cfa 8, 0
 125 009c 93040500 		mv	s1,a0
 126 00a0 13890500 		mv	s2,a1
  26:src/alloc.cpp ****     // Algorithm: puts it in the first place large enough found
  27:src/alloc.cpp **** 
  28:src/alloc.cpp ****     putString("Allocating at least ");
 127              		.loc 1 28 5
 128              		.loc 1 28 14 is_stmt 0
 129 00a4 17050000 		lla	a0,.LC0
 129      13050500 
 130              	.LVL5:
 131 00ac 97000000 		call	_Z9putStringPKc@plt
 131      E7800000 
 132              	.LVL6:
  29:src/alloc.cpp ****     putInt(size);
 133              		.loc 1 29 5 is_stmt 1
 134              		.loc 1 29 11 is_stmt 0
 135 00b4 1B050900 		sext.w	a0,s2
 136 00b8 97000000 		call	_Z6putInti@plt
 136      E7800000 
 137              	.LVL7:
  30:src/alloc.cpp ****     putString(" bytes");
 138              		.loc 1 30 5 is_stmt 1
 139              		.loc 1 30 14 is_stmt 0
 140 00c0 17050000 		lla	a0,.LC1
 140      13050500 
 141 00c8 97000000 		call	_Z9putStringPKc@plt
 141      E7800000 
 142              	.LVL8:
  31:src/alloc.cpp **** 
  32:src/alloc.cpp ****     __asm__ volatile ("ecall");
 143              		.loc 1 32 5 is_stmt 1
 144              		.loc 1 32 31 is_stmt 0
 145              	#APP
 146              	# 32 "src/alloc.cpp" 1
  33              	
  34:src/alloc.cpp ****     if(size % MEM_BLOCK_SIZE != 0) // align size
 147              		ecall
 148              	# 0 "" 2
 149              		.loc 1 34 5 is_stmt 1
 150              		.loc 1 34 13 is_stmt 0
 151              	#NO_APP
 152 00d4 9377F903 		andi	a5,s2,63
 153              		.loc 1 34 5
 154 00d8 63860700 		beqz	a5,.L11
  35:src/alloc.cpp ****     {
GAS LISTING /tmp/ccerZjSf.s 			page 5


  36:src/alloc.cpp ****         size += MEM_BLOCK_SIZE - (size % MEM_BLOCK_SIZE);
 155              		.loc 1 36 9 is_stmt 1
 156              		.loc 1 36 14 is_stmt 0
 157 00dc 137909FC 		andi	s2,s2,-64
 158              	.LVL9:
 159 00e0 13090904 		addi	s2,s2,64
 160              	.LVL10:
 161              	.L11:
  37:src/alloc.cpp ****     }
  38:src/alloc.cpp **** 
  39:src/alloc.cpp ****     assert(size % MEM_BLOCK_SIZE == 0);
 162              		.loc 1 39 5 is_stmt 1
 163 00e4 1375F903 		andi	a0,s2,63
 164 00e8 13067002 		li	a2,39
 165 00ec 97050000 		lla	a1,.LC2
 165      93850500 
 166 00f4 13351500 		seqz	a0,a0
 167 00f8 97000000 		call	_Z7_assertbPKci@plt
 167      E7800000 
 168              	.LVL11:
  40:src/alloc.cpp **** 
  41:src/alloc.cpp ****     MemNode* pCur = &freeHead;
 169              		.loc 1 41 5
 170              	.L15:
  42:src/alloc.cpp ****     while(pCur != nullptr)
 171              		.loc 1 42 5
 172              		.loc 1 42 16
 173 0100 638A0404 		beqz	s1,.L12
 174              	.LBB9:
  43:src/alloc.cpp ****     {
  44:src/alloc.cpp ****         if(pCur->size >= size)
 175              		.loc 1 44 9
 176              	.LBB10:
 177              		.loc 1 44 18 is_stmt 0
 178 0104 83B70401 		ld	a5,16(s1)
 179              		.loc 1 44 9
 180 0108 63F62701 		bgeu	a5,s2,.L17
 181              	.LBE10:
  45:src/alloc.cpp ****         {
  46:src/alloc.cpp ****             assert((uint64)pCur->base % MEM_BLOCK_SIZE == 0); // check for alignment errors
  47:src/alloc.cpp ****             void* ret = pCur->base;
  48:src/alloc.cpp ****             pCur->size -= size;
  49:src/alloc.cpp ****             pCur->base += size;
  50:src/alloc.cpp ****             return ret;
  51:src/alloc.cpp ****         }
  52:src/alloc.cpp **** 
  53:src/alloc.cpp ****         pCur = pCur->pNext;
 182              		.loc 1 53 9 is_stmt 1
 183              		.loc 1 53 14 is_stmt 0
 184 010c 83B48400 		ld	s1,8(s1)
 185              	.LVL12:
 186              	.LBE9:
  42:src/alloc.cpp ****     {
 187              		.loc 1 42 5
 188 0110 6FF01FFF 		j	.L15
 189              	.L17:
 190              	.LBB13:
GAS LISTING /tmp/ccerZjSf.s 			page 6


 191              	.LBB12:
 192              	.LBB11:
  46:src/alloc.cpp ****             void* ret = pCur->base;
 193              		.loc 1 46 13 is_stmt 1
 194 0114 03B58401 		ld	a0,24(s1)
 195 0118 1375F503 		andi	a0,a0,63
 196 011c 1306E002 		li	a2,46
 197 0120 97050000 		lla	a1,.LC2
 197      93850500 
 198 0128 13351500 		seqz	a0,a0
 199 012c 97000000 		call	_Z7_assertbPKci@plt
 199      E7800000 
 200              	.LVL13:
  47:src/alloc.cpp ****             pCur->size -= size;
 201              		.loc 1 47 13
  47:src/alloc.cpp ****             pCur->size -= size;
 202              		.loc 1 47 19 is_stmt 0
 203 0134 03B78401 		ld	a4,24(s1)
 204              	.LVL14:
  48:src/alloc.cpp ****             pCur->base += size;
 205              		.loc 1 48 13 is_stmt 1
  48:src/alloc.cpp ****             pCur->base += size;
 206              		.loc 1 48 24 is_stmt 0
 207 0138 83B70401 		ld	a5,16(s1)
 208 013c B3872741 		sub	a5,a5,s2
 209 0140 23B8F400 		sd	a5,16(s1)
  49:src/alloc.cpp ****             return ret;
 210              		.loc 1 49 13 is_stmt 1
  49:src/alloc.cpp ****             return ret;
 211              		.loc 1 49 24 is_stmt 0
 212 0144 33092701 		add	s2,a4,s2
 213              	.LVL15:
 214 0148 23BC2401 		sd	s2,24(s1)
  50:src/alloc.cpp ****         }
 215              		.loc 1 50 13 is_stmt 1
  50:src/alloc.cpp ****         }
 216              		.loc 1 50 20 is_stmt 0
 217 014c 93040700 		mv	s1,a4
 218              	.LVL16:
 219 0150 6F00C001 		j	.L10
 220              	.LVL17:
 221              	.L12:
 222              	.LBE11:
 223              	.LBE12:
 224              	.LBE13:
  54:src/alloc.cpp ****     }
  55:src/alloc.cpp **** 
  56:src/alloc.cpp ****     assert(false); // there is no slot large enough
 225              		.loc 1 56 5 is_stmt 1
 226 0154 13068003 		li	a2,56
 227 0158 97050000 		lla	a1,.LC2
 227      93850500 
 228 0160 13050000 		li	a0,0
 229 0164 97000000 		call	_Z7_assertbPKci@plt
 229      E7800000 
 230              	.LVL18:
  57:src/alloc.cpp **** 
GAS LISTING /tmp/ccerZjSf.s 			page 7


  58:src/alloc.cpp ****     return nullptr;
 231              		.loc 1 58 5
 232              	.L10:
  59:src/alloc.cpp **** }
 233              		.loc 1 59 1 is_stmt 0
 234 016c 13850400 		mv	a0,s1
 235 0170 83308101 		ld	ra,24(sp)
 236              		.cfi_restore 1
 237 0174 03340101 		ld	s0,16(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 32
 240 0178 83348100 		ld	s1,8(sp)
 241              		.cfi_restore 9
 242 017c 03390100 		ld	s2,0(sp)
 243              		.cfi_restore 18
 244 0180 13010102 		addi	sp,sp,32
 245              		.cfi_def_cfa_offset 0
 246 0184 67800000 		jr	ra
 247              		.cfi_endproc
 248              	.LFE7:
 250              		.bss
 251              		.align	3
 252              		.set	.LANCHOR0,. + 0
 255              	_ZGVZN8MemAlloc3getEvE8instance:
 256 0000 00000000 		.zero	8
 256      00000000 
 259              	_ZZN8MemAlloc3getEvE8instance:
 260 0008 00000000 		.zero	32
 260      00000000 
 260      00000000 
 260      00000000 
 260      00000000 
 261              		.text
 262              	.Letext0:
 263              		.file 3 "src/../h/../lib/hw.h"
 264              		.file 4 "src/../h/my_console.h"
GAS LISTING /tmp/ccerZjSf.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 alloc.cpp
     /tmp/ccerZjSf.s:9      .text:0000000000000000 _ZN8MemAllocC2Ev
     /tmp/ccerZjSf.s:13     .text:0000000000000000 .L0 
     /tmp/ccerZjSf.s:15     .text:0000000000000000 .L0 
     /tmp/ccerZjSf.s:16     .text:0000000000000004 .L0 
     /tmp/ccerZjSf.s:18     .text:0000000000000008 .L0 
     /tmp/ccerZjSf.s:20     .text:000000000000000c .L0 
     /tmp/ccerZjSf.s:27     .text:000000000000000c .L0 
     /tmp/ccerZjSf.s:33     .text:0000000000000014 .L0 
     /tmp/ccerZjSf.s:34     .text:0000000000000014 .L0 
     /tmp/ccerZjSf.s:38     .text:000000000000001c .L0 
     /tmp/ccerZjSf.s:39     .text:0000000000000020 .L0 
     /tmp/ccerZjSf.s:40     .text:0000000000000020 .L0 
     /tmp/ccerZjSf.s:42     .text:0000000000000024 .L0 
     /tmp/ccerZjSf.s:44     .text:0000000000000028 .L0 
     /tmp/ccerZjSf.s:9      .text:0000000000000000 _ZN8MemAllocC1Ev
     /tmp/ccerZjSf.s:52     .text:0000000000000028 _ZN8MemAlloc3getEv
     /tmp/ccerZjSf.s:55     .text:0000000000000028 .L0 
     /tmp/ccerZjSf.s:56     .text:0000000000000028 .L0 
     /tmp/ccerZjSf.s:57     .text:0000000000000028 .L0 
     /tmp/ccerZjSf.s:58     .text:0000000000000028 .L0 
     /tmp/ccerZjSf.s:61     .text:0000000000000034 .L0 
     /tmp/ccerZjSf.s:62     .text:0000000000000034 .L0 
     /tmp/ccerZjSf.s:66     .text:0000000000000040 .L0 
     /tmp/ccerZjSf.s:67     .text:0000000000000044 .L0 
     /tmp/ccerZjSf.s:70     .text:000000000000004c .L0 
     /tmp/ccerZjSf.s:71     .text:000000000000004c .L0 
     /tmp/ccerZjSf.s:73     .text:0000000000000050 .L0 
     /tmp/ccerZjSf.s:75     .text:0000000000000050 .L0 
     /tmp/ccerZjSf.s:81     .text:000000000000006c .L0 
     /tmp/ccerZjSf.s:82     .text:000000000000006c .L0 
     /tmp/ccerZjSf.s:84     .text:0000000000000078 .L0 
     /tmp/ccerZjSf.s:86     .text:000000000000007c .L0 
     /tmp/ccerZjSf.s:87     .text:000000000000007c .L0 
     /tmp/ccerZjSf.s:89     .text:0000000000000080 .L0 
     /tmp/ccerZjSf.s:91     .text:0000000000000084 .L0 
     /tmp/ccerZjSf.s:108    .text:0000000000000084 _ZN8MemAlloc8allocMemEm
     /tmp/ccerZjSf.s:111    .text:0000000000000084 .L0 
     /tmp/ccerZjSf.s:113    .text:0000000000000084 .L0 
     /tmp/ccerZjSf.s:114    .text:0000000000000088 .L0 
     /tmp/ccerZjSf.s:119    .text:0000000000000098 .L0 
     /tmp/ccerZjSf.s:120    .text:0000000000000098 .L0 
     /tmp/ccerZjSf.s:121    .text:0000000000000098 .L0 
     /tmp/ccerZjSf.s:122    .text:0000000000000098 .L0 
     /tmp/ccerZjSf.s:124    .text:000000000000009c .L0 
     /tmp/ccerZjSf.s:128    .text:00000000000000a4 .L0 
     /tmp/ccerZjSf.s:129    .text:00000000000000a4 .L0 
     /tmp/ccerZjSf.s:134    .text:00000000000000b4 .L0 
     /tmp/ccerZjSf.s:135    .text:00000000000000b4 .L0 
     /tmp/ccerZjSf.s:139    .text:00000000000000c0 .L0 
     /tmp/ccerZjSf.s:140    .text:00000000000000c0 .L0 
     /tmp/ccerZjSf.s:144    .text:00000000000000d0 .L0 
       src/alloc.cpp:32     .text:00000000000000d0 .L0 
     /tmp/ccerZjSf.s:150    .text:00000000000000d4 .L0 
     /tmp/ccerZjSf.s:152    .text:00000000000000d4 .L0 
     /tmp/ccerZjSf.s:154    .text:00000000000000d8 .L0 
GAS LISTING /tmp/ccerZjSf.s 			page 9


     /tmp/ccerZjSf.s:156    .text:00000000000000dc .L0 
     /tmp/ccerZjSf.s:157    .text:00000000000000dc .L0 
     /tmp/ccerZjSf.s:163    .text:00000000000000e4 .L0 
     /tmp/ccerZjSf.s:171    .text:0000000000000100 .L0 
     /tmp/ccerZjSf.s:172    .text:0000000000000100 .L0 
     /tmp/ccerZjSf.s:173    .text:0000000000000100 .L0 
     /tmp/ccerZjSf.s:177    .text:0000000000000104 .L0 
     /tmp/ccerZjSf.s:178    .text:0000000000000104 .L0 
     /tmp/ccerZjSf.s:180    .text:0000000000000108 .L0 
     /tmp/ccerZjSf.s:183    .text:000000000000010c .L0 
     /tmp/ccerZjSf.s:184    .text:000000000000010c .L0 
     /tmp/ccerZjSf.s:188    .text:0000000000000110 .L0 
     /tmp/ccerZjSf.s:194    .text:0000000000000114 .L0 
     /tmp/ccerZjSf.s:202    .text:0000000000000134 .L0 
     /tmp/ccerZjSf.s:203    .text:0000000000000134 .L0 
     /tmp/ccerZjSf.s:206    .text:0000000000000138 .L0 
     /tmp/ccerZjSf.s:207    .text:0000000000000138 .L0 
     /tmp/ccerZjSf.s:211    .text:0000000000000144 .L0 
     /tmp/ccerZjSf.s:212    .text:0000000000000144 .L0 
     /tmp/ccerZjSf.s:216    .text:000000000000014c .L0 
     /tmp/ccerZjSf.s:217    .text:000000000000014c .L0 
     /tmp/ccerZjSf.s:226    .text:0000000000000154 .L0 
     /tmp/ccerZjSf.s:233    .text:000000000000016c .L0 
     /tmp/ccerZjSf.s:234    .text:000000000000016c .L0 
     /tmp/ccerZjSf.s:236    .text:0000000000000174 .L0 
     /tmp/ccerZjSf.s:238    .text:0000000000000178 .L0 
     /tmp/ccerZjSf.s:239    .text:0000000000000178 .L0 
     /tmp/ccerZjSf.s:241    .text:000000000000017c .L0 
     /tmp/ccerZjSf.s:243    .text:0000000000000180 .L0 
     /tmp/ccerZjSf.s:245    .text:0000000000000184 .L0 
     /tmp/ccerZjSf.s:247    .text:0000000000000188 .L0 
     /tmp/ccerZjSf.s:252    .bss:0000000000000000 .LANCHOR0
     /tmp/ccerZjSf.s:255    .bss:0000000000000000 _ZGVZN8MemAlloc3getEvE8instance
     /tmp/ccerZjSf.s:259    .bss:0000000000000008 _ZZN8MemAlloc3getEvE8instance
     /tmp/ccerZjSf.s:265    .text:0000000000000188 .L0 
     /tmp/ccerZjSf.s:58     .text:0000000000000028 .L0 
     /tmp/ccerZjSf.s:62     .text:0000000000000034 .L0 
     /tmp/ccerZjSf.s:75     .text:0000000000000050 .L0 
     /tmp/ccerZjSf.s:79     .text:0000000000000064 .L0 
     /tmp/ccerZjSf.s:82     .text:000000000000006c .L0 
     /tmp/ccerZjSf.s:96     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccerZjSf.s:129    .text:00000000000000a4 .L0 
     /tmp/ccerZjSf.s:99     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccerZjSf.s:140    .text:00000000000000c0 .L0 
     /tmp/ccerZjSf.s:102    .rodata.str1.8:0000000000000020 .LC2
     /tmp/ccerZjSf.s:165    .text:00000000000000ec .L0 
     /tmp/ccerZjSf.s:197    .text:0000000000000120 .L0 
     /tmp/ccerZjSf.s:227    .text:0000000000000158 .L0 
     /tmp/ccerZjSf.s:64     .text:0000000000000040 .L9
     /tmp/ccerZjSf.s:161    .text:00000000000000e4 .L11
     /tmp/ccerZjSf.s:221    .text:0000000000000154 .L12
     /tmp/ccerZjSf.s:189    .text:0000000000000114 .L17
     /tmp/ccerZjSf.s:170    .text:0000000000000100 .L15
     /tmp/ccerZjSf.s:232    .text:000000000000016c .L10
     /tmp/ccerZjSf.s:791    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccerZjSf.s:1558   .debug_str:0000000000000130 .LASF39
     /tmp/ccerZjSf.s:1600   .debug_str:000000000000030c .LASF40
GAS LISTING /tmp/ccerZjSf.s 			page 10


     /tmp/ccerZjSf.s:1522   .debug_str:0000000000000025 .LASF41
     /tmp/ccerZjSf.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccerZjSf.s:262    .text:0000000000000188 .Letext0
     /tmp/ccerZjSf.s:1512   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccerZjSf.s:1566   .debug_str:000000000000022a .LASF0
     /tmp/ccerZjSf.s:1552   .debug_str:0000000000000100 .LASF1
     /tmp/ccerZjSf.s:1546   .debug_str:00000000000000db .LASF2
     /tmp/ccerZjSf.s:1528   .debug_str:0000000000000066 .LASF4
     /tmp/ccerZjSf.s:1550   .debug_str:00000000000000ee .LASF3
     /tmp/ccerZjSf.s:1518   .debug_str:0000000000000019 .LASF5
     /tmp/ccerZjSf.s:1516   .debug_str:0000000000000006 .LASF6
     /tmp/ccerZjSf.s:1540   .debug_str:00000000000000ae .LASF7
     /tmp/ccerZjSf.s:1570   .debug_str:000000000000023c .LASF8
     /tmp/ccerZjSf.s:1524   .debug_str:0000000000000039 .LASF9
     /tmp/ccerZjSf.s:1604   .debug_str:0000000000000321 .LASF10
     /tmp/ccerZjSf.s:1542   .debug_str:00000000000000c1 .LASF11
     /tmp/ccerZjSf.s:1592   .debug_str:00000000000002d2 .LASF12
     /tmp/ccerZjSf.s:1578   .debug_str:0000000000000283 .LASF13
     /tmp/ccerZjSf.s:1556   .debug_str:0000000000000124 .LASF14
     /tmp/ccerZjSf.s:1536   .debug_str:000000000000008e .LASF15
     /tmp/ccerZjSf.s:1572   .debug_str:000000000000024c .LASF16
     /tmp/ccerZjSf.s:1582   .debug_str:000000000000029c .LASF26
     /tmp/ccerZjSf.s:1534   .debug_str:0000000000000086 .LASF25
     /tmp/ccerZjSf.s:1596   .debug_str:0000000000000301 .LASF17
     /tmp/ccerZjSf.s:1514   .debug_str:0000000000000000 .LASF18
     /tmp/ccerZjSf.s:1598   .debug_str:0000000000000307 .LASF19
     /tmp/ccerZjSf.s:1564   .debug_str:0000000000000225 .LASF20
     /tmp/ccerZjSf.s:1594   .debug_str:00000000000002e2 .LASF27
     /tmp/ccerZjSf.s:1588   .debug_str:00000000000002b7 .LASF42
     /tmp/ccerZjSf.s:1532   .debug_str:000000000000007d .LASF43
     /tmp/ccerZjSf.s:1584   .debug_str:00000000000002a5 .LASF21
     /tmp/ccerZjSf.s:1562   .debug_str:000000000000020d .LASF23
     /tmp/ccerZjSf.s:1580   .debug_str:0000000000000293 .LASF22
     /tmp/ccerZjSf.s:1560   .debug_str:00000000000001f4 .LASF24
     /tmp/ccerZjSf.s:1554   .debug_str:0000000000000113 .LASF28
     /tmp/ccerZjSf.s:1568   .debug_str:0000000000000237 .LASF29
     /tmp/ccerZjSf.s:109    .text:0000000000000084 .LFB7
     /tmp/ccerZjSf.s:248    .text:0000000000000188 .LFE7
     /tmp/ccerZjSf.s:1548   .debug_str:00000000000000e9 .LASF32
     /tmp/ccerZjSf.s:1422   .debug_loc:0000000000000000 .LLST3
     /tmp/ccerZjSf.s:1440   .debug_loc:000000000000004c .LLST4
     /tmp/ccerZjSf.s:1520   .debug_str:0000000000000020 .LASF30
     /tmp/ccerZjSf.s:1466   .debug_loc:00000000000000be .LLST5
     /tmp/ccerZjSf.s:192    .text:0000000000000114 .LBB11
     /tmp/ccerZjSf.s:222    .text:0000000000000154 .LBE11
     /tmp/ccerZjSf.s:1477   .debug_loc:00000000000000f4 .LLST6
     /tmp/ccerZjSf.s:200    .text:0000000000000134 .LVL13
     /tmp/ccerZjSf.s:132    .text:00000000000000b4 .LVL6
     /tmp/ccerZjSf.s:137    .text:00000000000000c0 .LVL7
     /tmp/ccerZjSf.s:142    .text:00000000000000d0 .LVL8
     /tmp/ccerZjSf.s:168    .text:0000000000000100 .LVL11
     /tmp/ccerZjSf.s:230    .text:000000000000016c .LVL18
     /tmp/ccerZjSf.s:53     .text:0000000000000028 .LFB6
     /tmp/ccerZjSf.s:92     .text:0000000000000084 .LFE6
     /tmp/ccerZjSf.s:1586   .debug_str:00000000000002ae .LASF31
     /tmp/ccerZjSf.s:77     .text:0000000000000060 .LVL3
     /tmp/ccerZjSf.s:1576   .debug_str:0000000000000272 .LASF44
GAS LISTING /tmp/ccerZjSf.s 			page 11


     /tmp/ccerZjSf.s:10     .text:0000000000000000 .LFB4
     /tmp/ccerZjSf.s:45     .text:0000000000000028 .LFE4
     /tmp/ccerZjSf.s:23     .text:000000000000000c .LBB7
     /tmp/ccerZjSf.s:31     .text:0000000000000014 .LBE7
     /tmp/ccerZjSf.s:1484   .debug_loc:0000000000000117 .LLST0
     /tmp/ccerZjSf.s:1492   .debug_loc:000000000000013b .LLST2
     /tmp/ccerZjSf.s:1526   .debug_str:0000000000000047 .LASF45
     /tmp/ccerZjSf.s:1574   .debug_str:0000000000000262 .LASF33
     /tmp/ccerZjSf.s:1590   .debug_str:00000000000002ca .LASF35
     /tmp/ccerZjSf.s:1530   .debug_str:000000000000006d .LASF34
     /tmp/ccerZjSf.s:1538   .debug_str:00000000000000a4 .LASF36
     /tmp/ccerZjSf.s:1544   .debug_str:00000000000000d0 .LASF37
     /tmp/ccerZjSf.s:1602   .debug_str:000000000000031a .LASF38
     /tmp/ccerZjSf.s:112    .text:0000000000000084 .LVL4
     /tmp/ccerZjSf.s:130    .text:00000000000000ac .LVL5
     /tmp/ccerZjSf.s:158    .text:00000000000000e0 .LVL9
     /tmp/ccerZjSf.s:160    .text:00000000000000e4 .LVL10
     /tmp/ccerZjSf.s:213    .text:0000000000000148 .LVL15
     /tmp/ccerZjSf.s:220    .text:0000000000000154 .LVL17
     /tmp/ccerZjSf.s:218    .text:0000000000000150 .LVL16
     /tmp/ccerZjSf.s:204    .text:0000000000000138 .LVL14
     /tmp/ccerZjSf.s:21     .text:000000000000000c .LVL1
     /tmp/ccerZjSf.s:29     .text:0000000000000014 .LVL2
     /tmp/ccerZjSf.s:266    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z9putStringPKc
_Z6putInti
_Z7_assertbPKci
